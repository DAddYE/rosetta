

-------- Grammar --------

rule 1 root: package imports xdcl_list
rule 2 package: 
rule 3 package: PACKAGE sym term
rule 4 imports: 
rule 5 imports: IMPORT import_stmt term
rule 6 imports: IMPORT INDENT import_stmt_list OUTDENT
rule 7 import_stmt: string
rule 8 import_stmt: sym string
rule 9 import_stmt: "." string
rule 10 import_stmt_list: import_stmt
rule 11 import_stmt_list: import_stmt_list term import_stmt
rule 12 xdcl: 
rule 13 xdcl: common_dcl
rule 14 xdcl: oo_dcl
rule 15 xdcl: xfndcl
rule 16 xdcl: non_dcl_stmt
rule 17 xdcl: error
rule 18 common_dcl: VAR vardcl
rule 19 common_dcl: VAR INDENT vardcl_list OUTDENT
rule 20 common_dcl: CONST constdcl
rule 21 common_dcl: CONST INDENT constdcl_list OUTDENT
rule 22 common_dcl: TYPE typedcl
rule 23 common_dcl: TYPE INDENT typedcl_list OUTDENT
rule 24 oo_dcl: CLASS dotname
rule 25 oo_dcl: CLASS dotname dotname
rule 26 oo_dcl: CLASS dotname INDENT xdcl_list OUTDENT
rule 27 oo_dcl: CLASS dotname dotname INDENT xdcl_list OUTDENT
rule 28 oo_dcl: MODULE dotname
rule 29 oo_dcl: MODULE dotname INDENT xdcl_list OUTDENT
rule 30 vardcl: dcl_name_list ntype
rule 31 vardcl: dcl_name_list ntype "=" expr_list
rule 32 vardcl: dcl_name_list "=" expr_list
rule 33 constdcl: dcl_name_list ntype "=" expr_list
rule 34 constdcl: dcl_name_list "=" expr_list
rule 35 constdcl1: constdcl
rule 36 constdcl1: dcl_name_list ntype
rule 37 constdcl1: dcl_name_list
rule 38 typedcl: sym ntype
rule 39 case: CASE expr_or_type_list
rule 40 case: CASE expr_or_type_list "=" expr
rule 41 case: CASE expr_or_type_list ":=" expr
rule 42 case: DEFAULT
rule 43 caseblock: case
rule 44 caseblock: case suite_stmt
rule 45 caseblock_list: caseblock
rule 46 caseblock_list: caseblock_list term caseblock
rule 47 range_stmt: expr_list "=" range
rule 48 range_stmt: expr_list ":=" range
rule 49 range_stmt: expr_list inrange
rule 50 range: RANGE expr
rule 51 inrange: IN expr
rule 52 for_header: osimple_stmt semi osimple_stmt semi osimple_stmt
rule 53 for_header: osimple_stmt
rule 54 for_header: range_stmt
rule 55 for_body: for_header suite_stmt
rule 56 for_stmt: FOR for_body
rule 57 if_header: simple_stmt
rule 58 if_header: simple_stmt semi osimple_stmt
rule 59 if_stmt: IF if_header suite_stmt elseif_list else
rule 60 elseif: ELSE IF if_header suite_stmt
rule 61 elseif_list: 
rule 62 elseif_list: elseif_list elseif
rule 63 else: 
rule 64 else: ELSE suite_stmt
rule 65 oif_header: 
rule 66 oif_header: if_header
rule 67 switch_stmt: SWITCH oif_header INDENT caseblock_list OUTDENT
rule 68 select_stmt: SELECT INDENT caseblock_list OUTDENT
rule 69 expr: uexpr
rule 70 expr: expr "||" expr
rule 71 expr: expr "&&" expr
rule 72 expr: expr "==" expr
rule 73 expr: expr "!=" expr
rule 74 expr: expr "<" expr
rule 75 expr: expr "<=" expr
rule 76 expr: expr ">=" expr
rule 77 expr: expr ">" expr
rule 78 expr: expr "+" expr
rule 79 expr: expr "-" expr
rule 80 expr: expr "|" expr
rule 81 expr: expr "^" expr
rule 82 expr: expr "*" expr
rule 83 expr: expr "/" expr
rule 84 expr: expr "%" expr
rule 85 expr: expr "&" expr
rule 86 expr: expr "&^" expr
rule 87 expr: expr "<<" expr
rule 88 expr: expr ">>" expr
rule 89 expr: expr "<-" expr
rule 90 uexpr: pexpr
rule 91 uexpr: "*" uexpr
rule 92 uexpr: "&" uexpr
rule 93 uexpr: "+" uexpr
rule 94 uexpr: "-" uexpr
rule 95 uexpr: "!" uexpr
rule 96 uexpr: "~" uexpr
rule 97 uexpr: "^" uexpr
rule 98 uexpr: "<-" uexpr
rule 99 pseudocall: call
rule 100 pseudocall: call_do
rule 101 pseudocall: call_self
rule 102 call: pexpr special
rule 103 call: pexpr "(" ")"
rule 104 call: pexpr "(" expr_or_type_list ")"
rule 105 call: pexpr "(" expr_or_type_list "..." ")"
rule 106 simple_call: nameo "(" ")"
rule 107 simple_call: nameo "(" expr_or_type_list ")"
rule 108 simple_call: nameo "(" expr_or_type_list "..." ")"
rule 109 call_self: pexpr "::" simple_call
rule 110 call_do: call fnliteral
rule 111 pexpr_no_paren: literal
rule 112 pexpr_no_paren: name
rule 113 pexpr_no_paren: pexpr "." sym
rule 114 pexpr_no_paren: pexpr "." "(" expr_or_type ")"
rule 115 pexpr_no_paren: pexpr "." "(" type ")"
rule 116 pexpr_no_paren: pexpr "[" expr "]"
rule 117 pexpr_no_paren: pexpr "[" oexpr ":" oexpr "]"
rule 118 pexpr_no_paren: pexpr "[" oexpr ":" oexpr ":" oexpr "]"
rule 119 pexpr_no_paren: pseudocall
rule 120 pexpr_no_paren: convtype "(" expr ")"
rule 121 pexpr_no_paren: comptype braced_keyval
rule 122 pexpr_no_paren: pexpr_no_paren braced_keyval
rule 123 pexpr_no_paren: "(" expr_or_type ")" braced_keyval
rule 124 pexpr_no_paren: fnliteral
rule 125 type: TYPE
rule 126 keyval: expr ":" complitexpr
rule 127 complitexpr: expr
rule 128 complitexpr: braced_keyval
rule 129 braced_keyval: "{" braced_keyval_list "}"
rule 130 braced_keyval: "{" INDENT braced_keyval_list OUTDENT "}"
rule 131 pexpr: pexpr_no_paren
rule 132 pexpr: "(" expr_or_type ")"
rule 133 expr_or_type: expr
rule 134 expr_or_type: non_expr_type
rule 135 name_or_type: ntype
rule 136 osym: 
rule 137 osym: sym
rule 138 sym: NAME
rule 139 sym: "@" NAME
rule 140 sym: "@" "@" NAME
rule 141 regex: REGEX
rule 142 string: STRING
rule 143 number: NUMBER
rule 144 literal: string
rule 145 literal: number
rule 146 literal: regex
rule 147 special: "?"
rule 148 special: "!"
rule 149 specialfn: "[" "]"
rule 150 specialfn: "[" "]" "="
rule 151 specialfn: "="
rule 152 specialfn: special
rule 153 ospecialfn: 
rule 154 ospecialfn: specialfn
rule 155 name: sym
rule 156 nameo: NAME
rule 157 semi: ";"
rule 158 comma: ","
rule 159 term: TERM
rule 160 dotdotdot: "..."
rule 161 dotdotdot: "..." ntype
rule 162 ntype: recvchantype
rule 163 ntype: fntype
rule 164 ntype: othertype
rule 165 ntype: ptrtype
rule 166 ntype: dotname
rule 167 ntype: "(" ntype ")"
rule 168 non_expr_type: recvchantype
rule 169 non_expr_type: fntype
rule 170 non_expr_type: othertype
rule 171 non_expr_type: "*" non_expr_type
rule 172 non_recvchantype: fntype
rule 173 non_recvchantype: othertype
rule 174 non_recvchantype: ptrtype
rule 175 non_recvchantype: dotname
rule 176 non_recvchantype: "(" ntype ")"
rule 177 convtype: fntype
rule 178 convtype: othertype
rule 179 comptype: othertype
rule 180 fnret_type: recvchantype
rule 181 fnret_type: fntype
rule 182 fnret_type: othertype
rule 183 fnret_type: ptrtype
rule 184 fnret_type: dotname
rule 185 dotname: name
rule 186 dotname: name "." sym
rule 187 dotname: name "::" sym
rule 188 othertype: "[" oexpr "]" ntype
rule 189 othertype: "[" "..." "]" ntype
rule 190 othertype: CHAN non_recvchantype
rule 191 othertype: CHAN "<-" ntype
rule 192 othertype: MAP "[" ntype "]" ntype
rule 193 othertype: structtype
rule 194 othertype: interfacetype
rule 195 ptrtype: "*" ntype
rule 196 recvchantype: "<-" CHAN ntype
rule 197 structtype: STRUCT "{" "}"
rule 198 structtype: STRUCT "{" structdcl_list "}"
rule 199 structtype: STRUCT INDENT structdcl_list OUTDENT
rule 200 interfacetype: INTERFACE "{" "}"
rule 201 interfacetype: INTERFACE "{" interfacedcl_list "}"
rule 202 interfacetype: INTERFACE INDENT interfacedcl_list OUTDENT
rule 203 fndcl: fname "(" oarg_type_list ")" fnres
rule 204 xfndcl: DEF fndcl suite_stmt
rule 205 xfndcl: DEF fndcl
rule 206 fnlitdcl: DO "(" oarg_type_list ")" fnres
rule 207 fnlitdcl: DO fnres
rule 208 fnliteral: fnlitdcl INDENT stmt_list OUTDENT
rule 209 fnliteral: fnlitdcl error
rule 210 fntype: FUNC "(" oarg_type_list ")" fnres
rule 211 optr: 
rule 212 optr: "*" optr
rule 213 fname: optr dotname ospecialfn
rule 214 fnres: 
rule 215 fnres: "->" fnret_type
rule 216 fnres: "->" "(" oarg_type_list ")"
rule 217 keyval_list: keyval
rule 218 keyval_list: complitexpr
rule 219 keyval_list: keyval_list comma keyval
rule 220 keyval_list: keyval_list comma complitexpr
rule 221 braced_keyval_list: 
rule 222 braced_keyval_list: keyval_list ocomma
rule 223 xdcl_list: xdcl
rule 224 xdcl_list: xdcl_list term xdcl
rule 225 vardcl_list: vardcl
rule 226 vardcl_list: vardcl_list term vardcl
rule 227 constdcl_list: constdcl1
rule 228 constdcl_list: constdcl_list term constdcl1
rule 229 typedcl_list: typedcl
rule 230 typedcl_list: typedcl_list term typedcl
rule 231 structdcl_list: structdcl
rule 232 structdcl_list: structdcl_list term structdcl
rule 233 interfacedcl_list: interfacedcl
rule 234 interfacedcl_list: interfacedcl_list term interfacedcl
rule 235 structdcl: sym_list ntype oliteral
rule 236 structdcl: embed oliteral
rule 237 structdcl: "(" embed ")" oliteral
rule 238 structdcl: "*" embed oliteral
rule 239 structdcl: "(" "*" embed ")" oliteral
rule 240 structdcl: "*" "(" embed ")" oliteral
rule 241 packname: nameo
rule 242 packname: nameo "." sym
rule 243 embed: packname
rule 244 interfacedcl: sym indcl
rule 245 interfacedcl: packname
rule 246 interfacedcl: "(" packname ")"
rule 247 indcl: "(" oarg_type_list ")" fnres
rule 248 arg_type: name_or_type
rule 249 arg_type: sym name_or_type
rule 250 arg_type: sym dotdotdot
rule 251 arg_type: dotdotdot
rule 252 arg_type_list: arg_type
rule 253 arg_type_list: arg_type_list comma arg_type
rule 254 oarg_type_list: 
rule 255 oarg_type_list: arg_type_list
rule 256 stmt: 
rule 257 stmt: common_dcl
rule 258 stmt: non_dcl_stmt
rule 259 stmt: error
rule 260 non_dcl_stmt: simple_stmt
rule 261 non_dcl_stmt: for_stmt
rule 262 non_dcl_stmt: switch_stmt
rule 263 non_dcl_stmt: select_stmt
rule 264 non_dcl_stmt: label_stmt
rule 265 non_dcl_stmt: if_stmt
rule 266 non_dcl_stmt: fall_stmt
rule 267 non_dcl_stmt: break_stmt
rule 268 non_dcl_stmt: continue_stmt
rule 269 non_dcl_stmt: go_stmt
rule 270 non_dcl_stmt: defer_stmt
rule 271 non_dcl_stmt: goto_stmt
rule 272 non_dcl_stmt: return_stmt
rule 273 label_stmt: NAME ":" INDENT stmt_list OUTDENT
rule 274 fall_stmt: FALL
rule 275 break_stmt: BREAK osym
rule 276 continue_stmt: CONTINUE osym
rule 277 go_stmt: GO pseudocall
rule 278 go_stmt: GO "!" go_call
rule 279 go_call: "(" ")" fnlitdcl
rule 280 go_call: "(" expr_or_type_list ")" fnliteral
rule 281 go_call: "(" expr_or_type_list "..." ")" fnliteral
rule 282 defer_stmt: DEFER pseudocall
rule 283 goto_stmt: GOTO sym
rule 284 return_stmt: RETURN oexpr_list
rule 285 small_stmt: simple_stmt
rule 286 small_stmt: FALL
rule 287 small_stmt: BREAK osym
rule 288 small_stmt: CONTINUE osym
rule 289 small_stmt: GO pseudocall
rule 290 small_stmt: DEFER pseudocall
rule 291 small_stmt: GOTO sym
rule 292 small_stmt: RETURN oexpr_list
rule 293 simple_stmt: expr
rule 294 simple_stmt: expr COP expr
rule 295 simple_stmt: expr_list "=" expr_list
rule 296 simple_stmt: expr_list ":=" expr_list
rule 297 simple_stmt: expr "++"
rule 298 simple_stmt: expr "--"
rule 299 suite_stmt: ":" small_stmt_list
rule 300 suite_stmt: INDENT stmt_list OUTDENT
rule 301 small_stmt_list: small_stmt
rule 302 small_stmt_list: small_stmt_list ";" small_stmt
rule 303 stmt_list: stmt
rule 304 stmt_list: stmt_list term stmt
rule 305 sym_list: sym
rule 306 sym_list: sym_list comma sym
rule 307 dcl_name_list: sym
rule 308 dcl_name_list: dcl_name_list comma sym
rule 309 expr_list: expr
rule 310 expr_list: expr_list comma expr
rule 311 expr_or_type_list: expr_or_type
rule 312 expr_or_type_list: expr_or_type_list comma expr_or_type
rule 313 ocomma: 
rule 314 ocomma: comma
rule 315 oexpr: 
rule 316 oexpr: expr
rule 317 oexpr_list: 
rule 318 oexpr_list: expr_list
rule 319 osimple_stmt: 
rule 320 osimple_stmt: simple_stmt
rule 321 oliteral: 
rule 322 oliteral: literal

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (86)
    on right: 
    on left : 
  root (87)
    on right: 
    on left : 1
  package (88)
    on right: 1
    on left : 2 3
  imports (89)
    on right: 1
    on left : 4 5 6
  xdcl_list (90)
    on right: 1 26 27 29 224
    on left : 223 224
  sym (91)
    on right: 3 8 38 113 137 155 186 187 242 244 249 250 283 291 305 306 307 308
    on left : 138 139 140
  term (92)
    on right: 3 5 11 46 224 226 228 230 232 234 304
    on left : 159
  import_stmt (93)
    on right: 5 10 11
    on left : 7 8 9
  import_stmt_list (94)
    on right: 6 11
    on left : 10 11
  string (95)
    on right: 7 8 9 144
    on left : 142
  xdcl (96)
    on right: 223 224
    on left : 12 13 14 15 16 17
  common_dcl (97)
    on right: 13 257
    on left : 18 19 20 21 22 23
  oo_dcl (98)
    on right: 14
    on left : 24 25 26 27 28 29
  xfndcl (99)
    on right: 15
    on left : 204 205
  non_dcl_stmt (100)
    on right: 16 258
    on left : 260 261 262 263 264 265 266 267 268 269 270 271 272
  vardcl (101)
    on right: 18 225 226
    on left : 30 31 32
  vardcl_list (102)
    on right: 19 226
    on left : 225 226
  constdcl (103)
    on right: 20 35
    on left : 33 34
  constdcl_list (104)
    on right: 21 228
    on left : 227 228
  typedcl (105)
    on right: 22 229 230
    on left : 38
  typedcl_list (106)
    on right: 23 230
    on left : 229 230
  dotname (107)
    on right: 24 25 26 27 28 29 166 175 184 213
    on left : 185 186 187
  dcl_name_list (108)
    on right: 30 31 32 33 34 36 37 308
    on left : 307 308
  ntype (109)
    on right: 30 31 33 36 38 135 161 167 176 188 189 191 192 195 196 235
    on left : 162 163 164 165 166 167
  expr_list (110)
    on right: 31 32 33 34 47 48 49 295 296 310 318
    on left : 309 310
  constdcl1 (111)
    on right: 227 228
    on left : 35 36 37
  case (112)
    on right: 43 44
    on left : 39 40 41 42
  expr_or_type_list (113)
    on right: 39 40 41 104 105 107 108 280 281 312
    on left : 311 312
  expr (114)
    on right: 40 41 50 51 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 116 120 126 127 133 293 294 297 298 309 310 316
    on left : 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89
  caseblock (115)
    on right: 45 46
    on left : 43 44
  suite_stmt (116)
    on right: 44 55 59 60 64 204
    on left : 299 300
  caseblock_list (117)
    on right: 46 67 68
    on left : 45 46
  range_stmt (118)
    on right: 54
    on left : 47 48 49
  range (119)
    on right: 47 48
    on left : 50
  inrange (120)
    on right: 49
    on left : 51
  for_header (121)
    on right: 55
    on left : 52 53 54
  osimple_stmt (122)
    on right: 52 53 58
    on left : 319 320
  semi (123)
    on right: 52 58
    on left : 157
  for_body (124)
    on right: 56
    on left : 55
  for_stmt (125)
    on right: 261
    on left : 56
  if_header (126)
    on right: 59 60 66
    on left : 57 58
  simple_stmt (127)
    on right: 57 58 260 285 320
    on left : 293 294 295 296 297 298
  if_stmt (128)
    on right: 265
    on left : 59
  elseif_list (129)
    on right: 59 62
    on left : 61 62
  else (130)
    on right: 59
    on left : 63 64
  elseif (131)
    on right: 62
    on left : 60
  oif_header (132)
    on right: 67
    on left : 65 66
  switch_stmt (133)
    on right: 262
    on left : 67
  select_stmt (134)
    on right: 263
    on left : 68
  uexpr (135)
    on right: 69 91 92 93 94 95 96 97 98
    on left : 90 91 92 93 94 95 96 97 98
  pexpr (136)
    on right: 90 102 103 104 105 109 113 114 115 116 117 118
    on left : 131 132
  pseudocall (137)
    on right: 119 277 282 289 290
    on left : 99 100 101
  call (138)
    on right: 99 110
    on left : 102 103 104 105
  call_do (139)
    on right: 100
    on left : 110
  call_self (140)
    on right: 101
    on left : 109
  special (141)
    on right: 102 152
    on left : 147 148
  simple_call (142)
    on right: 109
    on left : 106 107 108
  nameo (143)
    on right: 106 107 108 241 242
    on left : 156
  fnliteral (144)
    on right: 110 124 280 281
    on left : 208 209
  pexpr_no_paren (145)
    on right: 122 131
    on left : 111 112 113 114 115 116 117 118 119 120 121 122 123 124
  literal (146)
    on right: 111 322
    on left : 144 145 146
  name (147)
    on right: 112 185 186 187
    on left : 155
  expr_or_type (148)
    on right: 114 123 132 311 312
    on left : 133 134
  type (149)
    on right: 115
    on left : 125
  oexpr (150)
    on right: 117 118 188
    on left : 315 316
  convtype (151)
    on right: 120
    on left : 177 178
  comptype (152)
    on right: 121
    on left : 179
  braced_keyval (153)
    on right: 121 122 123 128
    on left : 129 130
  keyval (154)
    on right: 217 219
    on left : 126
  complitexpr (155)
    on right: 126 218 220
    on left : 127 128
  braced_keyval_list (156)
    on right: 129 130
    on left : 221 222
  non_expr_type (157)
    on right: 134 171
    on left : 168 169 170 171
  name_or_type (158)
    on right: 248 249
    on left : 135
  osym (159)
    on right: 275 276 287 288
    on left : 136 137
  regex (160)
    on right: 146
    on left : 141
  number (161)
    on right: 145
    on left : 143
  specialfn (162)
    on right: 154
    on left : 149 150 151 152
  ospecialfn (163)
    on right: 213
    on left : 153 154
  comma (164)
    on right: 219 220 253 306 308 310 312 314
    on left : 158
  dotdotdot (165)
    on right: 250 251
    on left : 160 161
  recvchantype (166)
    on right: 162 168 180
    on left : 196
  fntype (167)
    on right: 163 169 172 177 181
    on left : 210
  othertype (168)
    on right: 164 170 173 178 179 182
    on left : 188 189 190 191 192 193 194
  ptrtype (169)
    on right: 165 174 183
    on left : 195
  non_recvchantype (170)
    on right: 190
    on left : 172 173 174 175 176
  fnret_type (171)
    on right: 215
    on left : 180 181 182 183 184
  structtype (172)
    on right: 193
    on left : 197 198 199
  interfacetype (173)
    on right: 194
    on left : 200 201 202
  structdcl_list (174)
    on right: 198 199 232
    on left : 231 232
  interfacedcl_list (175)
    on right: 201 202 234
    on left : 233 234
  fndcl (176)
    on right: 204 205
    on left : 203
  fname (177)
    on right: 203
    on left : 213
  oarg_type_list (178)
    on right: 203 206 210 216 247
    on left : 254 255
  fnres (179)
    on right: 203 206 207 210 247
    on left : 214 215 216
  fnlitdcl (180)
    on right: 208 209 279
    on left : 206 207
  stmt_list (181)
    on right: 208 273 300 304
    on left : 303 304
  optr (182)
    on right: 212 213
    on left : 211 212
  keyval_list (183)
    on right: 219 220 222
    on left : 217 218 219 220
  ocomma (184)
    on right: 222
    on left : 313 314
  structdcl (185)
    on right: 231 232
    on left : 235 236 237 238 239 240
  interfacedcl (186)
    on right: 233 234
    on left : 244 245 246
  sym_list (187)
    on right: 235 306
    on left : 305 306
  oliteral (188)
    on right: 235 236 237 238 239 240
    on left : 321 322
  embed (189)
    on right: 236 237 238 239 240
    on left : 243
  packname (190)
    on right: 243 245 246
    on left : 241 242
  indcl (191)
    on right: 244
    on left : 247
  arg_type (192)
    on right: 252 253
    on left : 248 249 250 251
  arg_type_list (193)
    on right: 253 255
    on left : 252 253
  stmt (194)
    on right: 303 304
    on left : 256 257 258 259
  label_stmt (195)
    on right: 264
    on left : 273
  fall_stmt (196)
    on right: 266
    on left : 274
  break_stmt (197)
    on right: 267
    on left : 275
  continue_stmt (198)
    on right: 268
    on left : 276
  go_stmt (199)
    on right: 269
    on left : 277 278
  defer_stmt (200)
    on right: 270
    on left : 282
  goto_stmt (201)
    on right: 271
    on left : 283
  return_stmt (202)
    on right: 272
    on left : 284
  go_call (203)
    on right: 278
    on left : 279 280 281
  oexpr_list (204)
    on right: 284 292
    on left : 317 318
  small_stmt (205)
    on right: 301 302
    on left : 285 286 287 288 289 290 291 292
  small_stmt_list (206)
    on right: 299 302
    on left : 301 302

**Terminals, with rules where they appear

  $end (0) 
  error (1) 17 209 259
  BREAK (2) 275 287
  CASE (3) 39 40 41
  CHAN (4) 190 191 196
  CONST (5) 20 21
  CONTINUE (6) 276 288
  DEFAULT (7) 42
  DEFER (8) 282 290
  ELSE (9) 60 64
  FALL (10) 274 286
  FOR (11) 56
  DEF (12) 204 205
  DO (13) 206 207
  FUNC (14) 210
  GO (15) 277 278 289
  GOTO (16) 283 291
  IF (17) 59 60
  IMPORT (18) 5 6
  INTERFACE (19) 200 201 202
  MAP (20) 192
  NAME (21) 138 139 140 156 273
  PACKAGE (22) 3
  RANGE (23) 50
  RETURN (24) 284 292
  SELECT (25) 68
  STRUCT (26) 197 198 199
  SWITCH (27) 67
  TYPE (28) 22 23 125
  VAR (29) 18 19
  BODY (30) 
  IGNORE (31) 
  COMMENT (32) 
  INDENT (33) 6 19 21 23 26 27 29 67 68 130 199 202 208 273 300
  OUTDENT (34) 6 19 21 23 26 27 29 67 68 130 199 202 208 273 300
  TERM (35) 159
  IN (36) 51
  COP (37) 294
  STRING (38) 142
  NUMBER (39) 143
  MODULE (40) 28 29
  CLASS (41) 24 25 26 27
  REGEX (42) 141
  ToRightParen (43) 
  ")" (44) 103 104 105 106 107 108 114 115 120 123 132 167 176 203 206 210 216 237 239 240 246 247 279 280 281
  "(" (45) 103 104 105 106 107 108 114 115 120 123 132 167 176 203 206 210 216 237 239 240 246 247 279 280 281
  NotParen (46) 
  "*" (47) 82 91 171 195 212 238 239 240
  "/" (48) 83
  "%" (49) 84
  "&" (50) 85 92
  "<<" (51) 87
  ">>" (52) 88
  "&^" (53) 86
  "+" (54) 78 93
  "-" (55) 79 94
  "|" (56) 80
  "^" (57) 81 97
  "==" (58) 72
  "!=" (59) 73
  "<=" (60) 75
  ">=" (61) 76
  "<" (62) 74
  ">" (63) 77
  "&&" (64) 71
  "||" (65) 70
  "<-" (66) 89 98 191 196
  "." (67) 9 113 114 115 186 242
  "=" (68) 31 32 33 34 40 47 150 151 295
  ":=" (69) 41 48 296
  "!" (70) 95 148 278
  "~" (71) 96
  "..." (72) 105 108 160 161 189 281
  "::" (73) 109 187
  "[" (74) 116 117 118 149 150 188 189 192
  "]" (75) 116 117 118 149 150 188 189 192
  ":" (76) 117 118 126 273 299
  "{" (77) 129 130 197 198 200 201
  "}" (78) 129 130 197 198 200 201
  "@" (79) 139 140
  "?" (80) 147
  ";" (81) 157 302
  "," (82) 158
  "->" (83) 215 216
  "++" (84) 297
  "--" (85) 298

--------- State ---------

state 0


  PACKAGE       shift, and go to state 3
  $default      reduce using rule 2 (package)

  root          go to state 1
  package       go to state 2

state 1


  $end          shift, and go to state 4


state 2

   1) root : package _ imports xdcl_list

  IMPORT        shift, and go to state 6
  $default      reduce using rule 4 (imports)

  imports       go to state 5

state 3

   3) package : PACKAGE _ sym term

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 7

state 4


  $end          shift, and go to state 10


state 5

   1) root : package imports _ xdcl_list

  error         shift, and go to state 16
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DEF           shift, and go to state 65
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  MODULE        shift, and go to state 21
  CLASS         shift, and go to state 20
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 12 (xdcl)

  xdcl_list     go to state 11
  common_dcl    go to state 12
  oo_dcl        go to state 13
  xfndcl        go to state 14
  non_dcl_stmt  go to state 15
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  xdcl          go to state 69
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90

state 6

   5) imports : IMPORT _ import_stmt term
   6) imports : IMPORT _ INDENT import_stmt_list OUTDENT

  NAME          shift, and go to state 8
  INDENT        shift, and go to state 92
  STRING        shift, and go to state 50
  "."           shift, and go to state 95
  "@"           shift, and go to state 9

  import_stmt   go to state 91
  string        go to state 93
  sym           go to state 94

state 7

   3) package : PACKAGE sym _ term

  TERM          shift, and go to state 97

  term          go to state 96

state 8

 138) sym : NAME _

  $default      reduce using rule 138 (sym)


state 9

 139) sym : "@" _ NAME
 140) sym : "@" _ "@" NAME

  NAME          shift, and go to state 98
  "@"           shift, and go to state 99


state 10


  $default      accept


state 11

   1) root : package imports xdcl_list _
 224) xdcl_list : xdcl_list _ term xdcl

  TERM          shift, and go to state 97
  $default      reduce using rule 1 (root)

  term          go to state 100

state 12

  13) xdcl : common_dcl _

  $default      reduce using rule 13 (xdcl)


state 13

  14) xdcl : oo_dcl _

  $default      reduce using rule 14 (xdcl)


state 14

  15) xdcl : xfndcl _

  $default      reduce using rule 15 (xdcl)


state 15

  16) xdcl : non_dcl_stmt _

  $default      reduce using rule 16 (xdcl)


state 16

  17) xdcl : error _

  $default      reduce using rule 17 (xdcl)


state 17

  18) common_dcl : VAR _ vardcl
  19) common_dcl : VAR _ INDENT vardcl_list OUTDENT

  NAME          shift, and go to state 8
  INDENT        shift, and go to state 102
  "@"           shift, and go to state 9

  vardcl        go to state 101
  dcl_name_list  go to state 103
  sym           go to state 104

state 18

  20) common_dcl : CONST _ constdcl
  21) common_dcl : CONST _ INDENT constdcl_list OUTDENT

  NAME          shift, and go to state 8
  INDENT        shift, and go to state 106
  "@"           shift, and go to state 9

  constdcl      go to state 105
  dcl_name_list  go to state 107
  sym           go to state 104

state 19

  22) common_dcl : TYPE _ typedcl
  23) common_dcl : TYPE _ INDENT typedcl_list OUTDENT

  NAME          shift, and go to state 8
  INDENT        shift, and go to state 109
  "@"           shift, and go to state 9

  typedcl       go to state 108
  sym           go to state 110

state 20

  24) oo_dcl : CLASS _ dotname
  25) oo_dcl : CLASS _ dotname dotname
  26) oo_dcl : CLASS _ dotname INDENT xdcl_list OUTDENT
  27) oo_dcl : CLASS _ dotname dotname INDENT xdcl_list OUTDENT

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  dotname       go to state 111
  sym           go to state 55
  name          go to state 112

state 21

  28) oo_dcl : MODULE _ dotname
  29) oo_dcl : MODULE _ dotname INDENT xdcl_list OUTDENT

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  dotname       go to state 113
  sym           go to state 55
  name          go to state 112

state 22

  56) for_stmt : FOR _ for_body

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 319 (osimple_stmt)

  expr_list     go to state 114
  osimple_stmt  go to state 115
  range_stmt    go to state 116
  for_header    go to state 117
  for_body      go to state 118
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  simple_stmt   go to state 119

state 23

  59) if_stmt : IF _ if_header suite_stmt elseif_list else

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  simple_stmt   go to state 120
  if_header     go to state 121
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 90

state 24

  67) switch_stmt : SWITCH _ oif_header INDENT caseblock_list OUTDENT

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 65 (oif_header)

  simple_stmt   go to state 120
  if_header     go to state 122
  oif_header    go to state 123
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 90

state 25

  68) select_stmt : SELECT _ INDENT caseblock_list OUTDENT

  INDENT        shift, and go to state 124


state 26

  69) expr : uexpr _

  $default      reduce using rule 69 (expr)


state 27

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 293) simple_stmt : expr _
 294) simple_stmt : expr _ COP expr
 297) simple_stmt : expr _ "++"
 298) simple_stmt : expr _ "--"
 309) expr_list : expr _

  COP           shift, and go to state 145
  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  "++"          shift, and go to state 146
  "--"          shift, and go to state 147
  IN            reduce using rule 309 (expr_list)
  "="           reduce using rule 309 (expr_list)
  ":="          reduce using rule 309 (expr_list)
  ","           reduce using rule 309 (expr_list)
  $default      reduce using rule 293 (simple_stmt)


state 28

  90) uexpr : pexpr _
 102) call : pexpr _ special
 103) call : pexpr _ "(" ")"
 104) call : pexpr _ "(" expr_or_type_list ")"
 105) call : pexpr _ "(" expr_or_type_list "..." ")"
 109) call_self : pexpr _ "::" simple_call
 113) pexpr_no_paren : pexpr _ "." sym
 114) pexpr_no_paren : pexpr _ "." "(" expr_or_type ")"
 115) pexpr_no_paren : pexpr _ "." "(" type ")"
 116) pexpr_no_paren : pexpr _ "[" expr "]"
 117) pexpr_no_paren : pexpr _ "[" oexpr ":" oexpr "]"
 118) pexpr_no_paren : pexpr _ "[" oexpr ":" oexpr ":" oexpr "]"

  "("           shift, and go to state 149
  "."           shift, and go to state 151
  "!"           shift, and go to state 154
  "::"          shift, and go to state 150
  "["           shift, and go to state 152
  "?"           shift, and go to state 153
  $default      reduce using rule 90 (uexpr)

  special       go to state 148

state 29

  91) uexpr : "*" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 155
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 30

  92) uexpr : "&" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 156
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 31

  93) uexpr : "+" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 157
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 32

  94) uexpr : "-" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 158
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 33

  95) uexpr : "!" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 159
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 34

  96) uexpr : "~" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 160
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 35

  97) uexpr : "^" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 161
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 36

  98) uexpr : "<-" _ uexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 162
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 37

  99) pseudocall : call _
 110) call_do : call _ fnliteral

  DO            shift, and go to state 66
  $default      reduce using rule 99 (pseudocall)

  fnliteral     go to state 163
  fnlitdcl      go to state 67

state 38

 100) pseudocall : call_do _

  $default      reduce using rule 100 (pseudocall)


state 39

 101) pseudocall : call_self _

  $default      reduce using rule 101 (pseudocall)


state 40

 111) pexpr_no_paren : literal _

  $default      reduce using rule 111 (pexpr_no_paren)


state 41

 112) pexpr_no_paren : name _

  $default      reduce using rule 112 (pexpr_no_paren)


state 42

 119) pexpr_no_paren : pseudocall _

  $default      reduce using rule 119 (pexpr_no_paren)


state 43

 120) pexpr_no_paren : convtype _ "(" expr ")"

  "("           shift, and go to state 164


state 44

 121) pexpr_no_paren : comptype _ braced_keyval

  "{"           shift, and go to state 166

  braced_keyval  go to state 165

state 45

 122) pexpr_no_paren : pexpr_no_paren _ braced_keyval
 131) pexpr : pexpr_no_paren _

  "{"           shift, and go to state 166
  $default      reduce using rule 131 (pexpr)

  braced_keyval  go to state 167

state 46

 123) pexpr_no_paren : "(" _ expr_or_type ")" braced_keyval
 132) pexpr : "(" _ expr_or_type ")"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 168
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  expr_or_type  go to state 171
  fnliteral     go to state 47
  non_expr_type  go to state 172
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 47

 124) pexpr_no_paren : fnliteral _

  $default      reduce using rule 124 (pexpr_no_paren)


state 48

 138) sym : NAME _
 273) label_stmt : NAME _ ":" INDENT stmt_list OUTDENT

  ":"           shift, and go to state 176
  $default      reduce using rule 138 (sym)


state 49

 141) regex : REGEX _

  $default      reduce using rule 141 (regex)


state 50

 142) string : STRING _

  $default      reduce using rule 142 (string)


state 51

 143) number : NUMBER _

  $default      reduce using rule 143 (number)


state 52

 144) literal : string _

  $default      reduce using rule 144 (literal)


state 53

 145) literal : number _

  $default      reduce using rule 145 (literal)


state 54

 146) literal : regex _

  $default      reduce using rule 146 (literal)


state 55

 155) name : sym _

  $default      reduce using rule 155 (name)


state 56

 177) convtype : fntype _

  $default      reduce using rule 177 (convtype)


state 57

 178) convtype : othertype _
 179) comptype : othertype _

  "{"           reduce using rule 179 (comptype)
  $default      reduce using rule 178 (convtype)


state 58

 188) othertype : "[" _ oexpr "]" ntype
 189) othertype : "[" _ "..." "]" ntype

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "..."         shift, and go to state 179
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 315 (oexpr)

  uexpr         go to state 26
  expr          go to state 177
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  oexpr         go to state 178
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 59

 190) othertype : CHAN _ non_recvchantype
 191) othertype : CHAN _ "<-" ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 184
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 186
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  fntype        go to state 180
  othertype     go to state 181
  ptrtype       go to state 182
  dotname       go to state 183
  name          go to state 112
  non_recvchantype  go to state 185
  structtype    go to state 61
  interfacetype  go to state 62

state 60

 192) othertype : MAP _ "[" ntype "]" ntype

  "["           shift, and go to state 188


state 61

 193) othertype : structtype _

  $default      reduce using rule 193 (othertype)


state 62

 194) othertype : interfacetype _

  $default      reduce using rule 194 (othertype)


state 63

 197) structtype : STRUCT _ "{" "}"
 198) structtype : STRUCT _ "{" structdcl_list "}"
 199) structtype : STRUCT _ INDENT structdcl_list OUTDENT

  INDENT        shift, and go to state 190
  "{"           shift, and go to state 189


state 64

 200) interfacetype : INTERFACE _ "{" "}"
 201) interfacetype : INTERFACE _ "{" interfacedcl_list "}"
 202) interfacetype : INTERFACE _ INDENT interfacedcl_list OUTDENT

  INDENT        shift, and go to state 192
  "{"           shift, and go to state 191


state 65

 204) xfndcl : DEF _ fndcl suite_stmt
 205) xfndcl : DEF _ fndcl

  "*"           shift, and go to state 195
  $default      reduce using rule 211 (optr)

  fname         go to state 193
  fndcl         go to state 194
  optr          go to state 196

state 66

 206) fnlitdcl : DO _ "(" oarg_type_list ")" fnres
 207) fnlitdcl : DO _ fnres

  "("           shift, and go to state 197
  "->"          shift, and go to state 199
  $default      reduce using rule 214 (fnres)

  fnres         go to state 198

state 67

 208) fnliteral : fnlitdcl _ INDENT stmt_list OUTDENT
 209) fnliteral : fnlitdcl _ error

  error         shift, and go to state 201
  INDENT        shift, and go to state 200


state 68

 210) fntype : FUNC _ "(" oarg_type_list ")" fnres

  "("           shift, and go to state 202


state 69

 223) xdcl_list : xdcl _

  $default      reduce using rule 223 (xdcl_list)


state 70

 260) non_dcl_stmt : simple_stmt _

  $default      reduce using rule 260 (non_dcl_stmt)


state 71

 261) non_dcl_stmt : for_stmt _

  $default      reduce using rule 261 (non_dcl_stmt)


state 72

 262) non_dcl_stmt : switch_stmt _

  $default      reduce using rule 262 (non_dcl_stmt)


state 73

 263) non_dcl_stmt : select_stmt _

  $default      reduce using rule 263 (non_dcl_stmt)


state 74

 264) non_dcl_stmt : label_stmt _

  $default      reduce using rule 264 (non_dcl_stmt)


state 75

 265) non_dcl_stmt : if_stmt _

  $default      reduce using rule 265 (non_dcl_stmt)


state 76

 266) non_dcl_stmt : fall_stmt _

  $default      reduce using rule 266 (non_dcl_stmt)


state 77

 267) non_dcl_stmt : break_stmt _

  $default      reduce using rule 267 (non_dcl_stmt)


state 78

 268) non_dcl_stmt : continue_stmt _

  $default      reduce using rule 268 (non_dcl_stmt)


state 79

 269) non_dcl_stmt : go_stmt _

  $default      reduce using rule 269 (non_dcl_stmt)


state 80

 270) non_dcl_stmt : defer_stmt _

  $default      reduce using rule 270 (non_dcl_stmt)


state 81

 271) non_dcl_stmt : goto_stmt _

  $default      reduce using rule 271 (non_dcl_stmt)


state 82

 272) non_dcl_stmt : return_stmt _

  $default      reduce using rule 272 (non_dcl_stmt)


state 83

 274) fall_stmt : FALL _

  $default      reduce using rule 274 (fall_stmt)


state 84

 275) break_stmt : BREAK _ osym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9
  $default      reduce using rule 136 (osym)

  sym           go to state 203
  osym          go to state 204

state 85

 276) continue_stmt : CONTINUE _ osym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9
  $default      reduce using rule 136 (osym)

  sym           go to state 203
  osym          go to state 205

state 86

 277) go_stmt : GO _ pseudocall
 278) go_stmt : GO _ "!" go_call

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "!"           shift, and go to state 208
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  pexpr         go to state 206
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 207
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 87

 282) defer_stmt : DEFER _ pseudocall

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  pexpr         go to state 206
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 209
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 88

 283) goto_stmt : GOTO _ sym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 210

state 89

 284) return_stmt : RETURN _ oexpr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 317 (oexpr_list)

  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  oexpr_list    go to state 212
  expr_list     go to state 213

state 90

 295) simple_stmt : expr_list _ "=" expr_list
 296) simple_stmt : expr_list _ ":=" expr_list
 310) expr_list : expr_list _ comma expr

  "="           shift, and go to state 215
  ":="          shift, and go to state 216
  ","           shift, and go to state 214

  comma         go to state 217

state 91

   5) imports : IMPORT import_stmt _ term

  TERM          shift, and go to state 97

  term          go to state 218

state 92

   6) imports : IMPORT INDENT _ import_stmt_list OUTDENT

  NAME          shift, and go to state 8
  STRING        shift, and go to state 50
  "."           shift, and go to state 95
  "@"           shift, and go to state 9

  import_stmt_list  go to state 219
  string        go to state 93
  sym           go to state 94
  import_stmt   go to state 220

state 93

   7) import_stmt : string _

  $default      reduce using rule 7 (import_stmt)


state 94

   8) import_stmt : sym _ string

  STRING        shift, and go to state 50

  string        go to state 221

state 95

   9) import_stmt : "." _ string

  STRING        shift, and go to state 50

  string        go to state 222

state 96

   3) package : PACKAGE sym term _

  $default      reduce using rule 3 (package)


state 97

 159) term : TERM _

  $default      reduce using rule 159 (term)


state 98

 139) sym : "@" NAME _

  $default      reduce using rule 139 (sym)


state 99

 140) sym : "@" "@" _ NAME

  NAME          shift, and go to state 223


state 100

 224) xdcl_list : xdcl_list term _ xdcl

  error         shift, and go to state 16
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DEF           shift, and go to state 65
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  MODULE        shift, and go to state 21
  CLASS         shift, and go to state 20
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 12 (xdcl)

  common_dcl    go to state 12
  oo_dcl        go to state 13
  xfndcl        go to state 14
  non_dcl_stmt  go to state 15
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  xdcl          go to state 224
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90

state 101

  18) common_dcl : VAR vardcl _

  $default      reduce using rule 18 (common_dcl)


state 102

  19) common_dcl : VAR INDENT _ vardcl_list OUTDENT

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  vardcl_list   go to state 225
  dcl_name_list  go to state 103
  vardcl        go to state 226
  sym           go to state 104

state 103

  30) vardcl : dcl_name_list _ ntype
  31) vardcl : dcl_name_list _ ntype "=" expr_list
  32) vardcl : dcl_name_list _ "=" expr_list
 308) dcl_name_list : dcl_name_list _ comma sym

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "="           shift, and go to state 228
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  ","           shift, and go to state 214

  ntype         go to state 227
  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  comma         go to state 236

state 104

 307) dcl_name_list : sym _

  $default      reduce using rule 307 (dcl_name_list)


state 105

  20) common_dcl : CONST constdcl _

  $default      reduce using rule 20 (common_dcl)


state 106

  21) common_dcl : CONST INDENT _ constdcl_list OUTDENT

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  constdcl_list  go to state 237
  dcl_name_list  go to state 238
  constdcl      go to state 239
  constdcl1     go to state 240
  sym           go to state 104

state 107

  33) constdcl : dcl_name_list _ ntype "=" expr_list
  34) constdcl : dcl_name_list _ "=" expr_list
 308) dcl_name_list : dcl_name_list _ comma sym

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "="           shift, and go to state 242
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  ","           shift, and go to state 214

  ntype         go to state 241
  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  comma         go to state 236

state 108

  22) common_dcl : TYPE typedcl _

  $default      reduce using rule 22 (common_dcl)


state 109

  23) common_dcl : TYPE INDENT _ typedcl_list OUTDENT

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  typedcl_list  go to state 243
  sym           go to state 110
  typedcl       go to state 244

state 110

  38) typedcl : sym _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  ntype         go to state 245
  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62

state 111

  24) oo_dcl : CLASS dotname _
  25) oo_dcl : CLASS dotname _ dotname
  26) oo_dcl : CLASS dotname _ INDENT xdcl_list OUTDENT
  27) oo_dcl : CLASS dotname _ dotname INDENT xdcl_list OUTDENT

  NAME          shift, and go to state 8
  INDENT        shift, and go to state 247
  "@"           shift, and go to state 9
  $default      reduce using rule 24 (oo_dcl)

  dotname       go to state 246
  sym           go to state 55
  name          go to state 112

state 112

 185) dotname : name _
 186) dotname : name _ "." sym
 187) dotname : name _ "::" sym

  "."           shift, and go to state 248
  "::"          shift, and go to state 249
  $default      reduce using rule 185 (dotname)


state 113

  28) oo_dcl : MODULE dotname _
  29) oo_dcl : MODULE dotname _ INDENT xdcl_list OUTDENT

  INDENT        shift, and go to state 250
  $default      reduce using rule 28 (oo_dcl)


state 114

  47) range_stmt : expr_list _ "=" range
  48) range_stmt : expr_list _ ":=" range
  49) range_stmt : expr_list _ inrange
 295) simple_stmt : expr_list _ "=" expr_list
 296) simple_stmt : expr_list _ ":=" expr_list
 310) expr_list : expr_list _ comma expr

  IN            shift, and go to state 254
  "="           shift, and go to state 251
  ":="          shift, and go to state 252
  ","           shift, and go to state 214

  inrange       go to state 253
  comma         go to state 217

state 115

  52) for_header : osimple_stmt _ semi osimple_stmt semi osimple_stmt
  53) for_header : osimple_stmt _

  ";"           shift, and go to state 256
  $default      reduce using rule 53 (for_header)

  semi          go to state 255

state 116

  54) for_header : range_stmt _

  $default      reduce using rule 54 (for_header)


state 117

  55) for_body : for_header _ suite_stmt

  INDENT        shift, and go to state 259
  ":"           shift, and go to state 258

  suite_stmt    go to state 257

state 118

  56) for_stmt : FOR for_body _

  $default      reduce using rule 56 (for_stmt)


state 119

 320) osimple_stmt : simple_stmt _

  $default      reduce using rule 320 (osimple_stmt)


state 120

  57) if_header : simple_stmt _
  58) if_header : simple_stmt _ semi osimple_stmt

  ";"           shift, and go to state 256
  $default      reduce using rule 57 (if_header)

  semi          go to state 260

state 121

  59) if_stmt : IF if_header _ suite_stmt elseif_list else

  INDENT        shift, and go to state 259
  ":"           shift, and go to state 258

  suite_stmt    go to state 261

state 122

  66) oif_header : if_header _

  $default      reduce using rule 66 (oif_header)


state 123

  67) switch_stmt : SWITCH oif_header _ INDENT caseblock_list OUTDENT

  INDENT        shift, and go to state 262


state 124

  68) select_stmt : SELECT INDENT _ caseblock_list OUTDENT

  CASE          shift, and go to state 263
  DEFAULT       shift, and go to state 264

  case          go to state 265
  caseblock     go to state 266
  caseblock_list  go to state 267

state 125

  70) expr : expr "||" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 268
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 126

  71) expr : expr "&&" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 269
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 127

  72) expr : expr "==" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 270
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 128

  73) expr : expr "!=" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 271
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 129

  74) expr : expr "<" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 272
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 130

  75) expr : expr "<=" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 273
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 131

  76) expr : expr ">=" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 274
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 132

  77) expr : expr ">" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 275
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 133

  78) expr : expr "+" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 276
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 134

  79) expr : expr "-" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 277
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 135

  80) expr : expr "|" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 278
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 136

  81) expr : expr "^" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 279
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 137

  82) expr : expr "*" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 280
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 138

  83) expr : expr "/" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 281
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 139

  84) expr : expr "%" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 282
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 140

  85) expr : expr "&" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 283
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 141

  86) expr : expr "&^" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 284
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 142

  87) expr : expr "<<" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 285
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 143

  88) expr : expr ">>" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 286
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 144

  89) expr : expr "<-" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 287
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 145

 294) simple_stmt : expr COP _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 288
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 146

 297) simple_stmt : expr "++" _

  $default      reduce using rule 297 (simple_stmt)


state 147

 298) simple_stmt : expr "--" _

  $default      reduce using rule 298 (simple_stmt)


state 148

 102) call : pexpr special _

  $default      reduce using rule 102 (call)


state 149

 103) call : pexpr "(" _ ")"
 104) call : pexpr "(" _ expr_or_type_list ")"
 105) call : pexpr "(" _ expr_or_type_list "..." ")"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  ")"           shift, and go to state 289
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 168
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  expr_or_type_list  go to state 290
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  non_expr_type  go to state 172
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_or_type  go to state 291

state 150

 109) call_self : pexpr "::" _ simple_call

  NAME          shift, and go to state 294

  nameo         go to state 292
  simple_call   go to state 293

state 151

 113) pexpr_no_paren : pexpr "." _ sym
 114) pexpr_no_paren : pexpr "." _ "(" expr_or_type ")"
 115) pexpr_no_paren : pexpr "." _ "(" type ")"

  NAME          shift, and go to state 8
  "("           shift, and go to state 296
  "@"           shift, and go to state 9

  sym           go to state 295

state 152

 116) pexpr_no_paren : pexpr "[" _ expr "]"
 117) pexpr_no_paren : pexpr "[" _ oexpr ":" oexpr "]"
 118) pexpr_no_paren : pexpr "[" _ oexpr ":" oexpr ":" oexpr "]"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 315 (oexpr)

  uexpr         go to state 26
  expr          go to state 297
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  oexpr         go to state 298
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 153

 147) special : "?" _

  $default      reduce using rule 147 (special)


state 154

 148) special : "!" _

  $default      reduce using rule 148 (special)


state 155

  91) uexpr : "*" uexpr _

  $default      reduce using rule 91 (uexpr)


state 156

  92) uexpr : "&" uexpr _

  $default      reduce using rule 92 (uexpr)


state 157

  93) uexpr : "+" uexpr _

  $default      reduce using rule 93 (uexpr)


state 158

  94) uexpr : "-" uexpr _

  $default      reduce using rule 94 (uexpr)


state 159

  95) uexpr : "!" uexpr _

  $default      reduce using rule 95 (uexpr)


state 160

  96) uexpr : "~" uexpr _

  $default      reduce using rule 96 (uexpr)


state 161

  97) uexpr : "^" uexpr _

  $default      reduce using rule 97 (uexpr)


state 162

  98) uexpr : "<-" uexpr _

  $default      reduce using rule 98 (uexpr)


state 163

 110) call_do : call fnliteral _

  $default      reduce using rule 110 (call_do)


state 164

 120) pexpr_no_paren : convtype "(" _ expr ")"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 299
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 165

 121) pexpr_no_paren : comptype braced_keyval _

  $default      reduce using rule 121 (pexpr_no_paren)


state 166

 129) braced_keyval : "{" _ braced_keyval_list "}"
 130) braced_keyval : "{" _ INDENT braced_keyval_list OUTDENT "}"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  INDENT        shift, and go to state 303
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "{"           shift, and go to state 166
  "@"           shift, and go to state 9
  $default      reduce using rule 221 (braced_keyval_list)

  uexpr         go to state 26
  expr          go to state 300
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  braced_keyval  go to state 301
  braced_keyval_list  go to state 302
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  keyval        go to state 304
  complitexpr   go to state 305
  keyval_list   go to state 306

state 167

 122) pexpr_no_paren : pexpr_no_paren braced_keyval _

  $default      reduce using rule 122 (pexpr_no_paren)


state 168

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 133) expr_or_type : expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 133 (expr_or_type)


state 169

  91) uexpr : "*" _ uexpr
 171) non_expr_type : "*" _ non_expr_type

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 155
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  non_expr_type  go to state 307
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 170

  98) uexpr : "<-" _ uexpr
 196) recvchantype : "<-" _ CHAN ntype

  CHAN          shift, and go to state 308
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  pexpr         go to state 28
  uexpr         go to state 162
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 171

 123) pexpr_no_paren : "(" expr_or_type _ ")" braced_keyval
 132) pexpr : "(" expr_or_type _ ")"

  ")"           shift, and go to state 309


state 172

 134) expr_or_type : non_expr_type _

  $default      reduce using rule 134 (expr_or_type)


state 173

 168) non_expr_type : recvchantype _

  $default      reduce using rule 168 (non_expr_type)


state 174

 169) non_expr_type : fntype _
 177) convtype : fntype _

  "("           reduce using rule 177 (convtype)
  $default      reduce using rule 169 (non_expr_type)


state 175

 170) non_expr_type : othertype _
 178) convtype : othertype _
 179) comptype : othertype _

  "("           reduce using rule 178 (convtype)
  "{"           reduce using rule 179 (comptype)
  $default      reduce using rule 170 (non_expr_type)


state 176

 273) label_stmt : NAME ":" _ INDENT stmt_list OUTDENT

  INDENT        shift, and go to state 310


state 177

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 316) oexpr : expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 316 (oexpr)


state 178

 188) othertype : "[" oexpr _ "]" ntype

  "]"           shift, and go to state 311


state 179

 189) othertype : "[" "..." _ "]" ntype

  "]"           shift, and go to state 312


state 180

 172) non_recvchantype : fntype _

  $default      reduce using rule 172 (non_recvchantype)


state 181

 173) non_recvchantype : othertype _

  $default      reduce using rule 173 (non_recvchantype)


state 182

 174) non_recvchantype : ptrtype _

  $default      reduce using rule 174 (non_recvchantype)


state 183

 175) non_recvchantype : dotname _

  $default      reduce using rule 175 (non_recvchantype)


state 184

 176) non_recvchantype : "(" _ ntype ")"

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  ntype         go to state 313
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62

state 185

 190) othertype : CHAN non_recvchantype _

  $default      reduce using rule 190 (othertype)


state 186

 191) othertype : CHAN "<-" _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  ntype         go to state 314
  structtype    go to state 61
  interfacetype  go to state 62

state 187

 195) ptrtype : "*" _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  ntype         go to state 315

state 188

 192) othertype : MAP "[" _ ntype "]" ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  ntype         go to state 316
  structtype    go to state 61
  interfacetype  go to state 62

state 189

 197) structtype : STRUCT "{" _ "}"
 198) structtype : STRUCT "{" _ structdcl_list "}"

  NAME          shift, and go to state 317
  "("           shift, and go to state 323
  "*"           shift, and go to state 324
  "}"           shift, and go to state 318
  "@"           shift, and go to state 9

  structdcl_list  go to state 319
  structdcl     go to state 320
  sym_list      go to state 321
  embed         go to state 322
  nameo         go to state 325
  packname      go to state 326
  sym           go to state 327

state 190

 199) structtype : STRUCT INDENT _ structdcl_list OUTDENT

  NAME          shift, and go to state 317
  "("           shift, and go to state 323
  "*"           shift, and go to state 324
  "@"           shift, and go to state 9

  structdcl_list  go to state 328
  structdcl     go to state 320
  sym_list      go to state 321
  embed         go to state 322
  nameo         go to state 325
  packname      go to state 326
  sym           go to state 327

state 191

 200) interfacetype : INTERFACE "{" _ "}"
 201) interfacetype : INTERFACE "{" _ interfacedcl_list "}"

  NAME          shift, and go to state 317
  "("           shift, and go to state 334
  "}"           shift, and go to state 329
  "@"           shift, and go to state 9

  interfacedcl_list  go to state 330
  interfacedcl  go to state 331
  nameo         go to state 325
  sym           go to state 332
  packname      go to state 333

state 192

 202) interfacetype : INTERFACE INDENT _ interfacedcl_list OUTDENT

  NAME          shift, and go to state 317
  "("           shift, and go to state 334
  "@"           shift, and go to state 9

  interfacedcl_list  go to state 335
  interfacedcl  go to state 331
  nameo         go to state 325
  sym           go to state 332
  packname      go to state 333

state 193

 203) fndcl : fname _ "(" oarg_type_list ")" fnres

  "("           shift, and go to state 336


state 194

 204) xfndcl : DEF fndcl _ suite_stmt
 205) xfndcl : DEF fndcl _

  INDENT        shift, and go to state 259
  ":"           shift, and go to state 258
  $default      reduce using rule 205 (xfndcl)

  suite_stmt    go to state 337

state 195

 212) optr : "*" _ optr

  "*"           shift, and go to state 195
  $default      reduce using rule 211 (optr)

  optr          go to state 338

state 196

 213) fname : optr _ dotname ospecialfn

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 55
  name          go to state 112
  dotname       go to state 339

state 197

 206) fnlitdcl : DO "(" _ oarg_type_list ")" fnres

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "..."         shift, and go to state 342
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 254 (oarg_type_list)

  ntype         go to state 340
  sym           go to state 341
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  oarg_type_list  go to state 343
  name_or_type  go to state 344
  dotdotdot     go to state 345
  arg_type      go to state 346
  arg_type_list  go to state 347

state 198

 207) fnlitdcl : DO fnres _

  $default      reduce using rule 207 (fnlitdcl)


state 199

 215) fnres : "->" _ fnret_type
 216) fnres : "->" _ "(" oarg_type_list ")"

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 354
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 348
  fntype        go to state 349
  othertype     go to state 350
  ptrtype       go to state 351
  dotname       go to state 352
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  fnret_type    go to state 353

state 200

 208) fnliteral : fnlitdcl INDENT _ stmt_list OUTDENT

  error         shift, and go to state 358
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 256 (stmt)

  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  stmt_list     go to state 355
  common_dcl    go to state 356
  non_dcl_stmt  go to state 357
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90
  stmt          go to state 359

state 201

 209) fnliteral : fnlitdcl error _

  $default      reduce using rule 209 (fnliteral)


state 202

 210) fntype : FUNC "(" _ oarg_type_list ")" fnres

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "..."         shift, and go to state 342
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 254 (oarg_type_list)

  ntype         go to state 340
  sym           go to state 341
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  oarg_type_list  go to state 360
  name_or_type  go to state 344
  dotdotdot     go to state 345
  arg_type      go to state 346
  arg_type_list  go to state 347

state 203

 137) osym : sym _

  $default      reduce using rule 137 (osym)


state 204

 275) break_stmt : BREAK osym _

  $default      reduce using rule 275 (break_stmt)


state 205

 276) continue_stmt : CONTINUE osym _

  $default      reduce using rule 276 (continue_stmt)


state 206

 102) call : pexpr _ special
 103) call : pexpr _ "(" ")"
 104) call : pexpr _ "(" expr_or_type_list ")"
 105) call : pexpr _ "(" expr_or_type_list "..." ")"
 109) call_self : pexpr _ "::" simple_call
 113) pexpr_no_paren : pexpr _ "." sym
 114) pexpr_no_paren : pexpr _ "." "(" expr_or_type ")"
 115) pexpr_no_paren : pexpr _ "." "(" type ")"
 116) pexpr_no_paren : pexpr _ "[" expr "]"
 117) pexpr_no_paren : pexpr _ "[" oexpr ":" oexpr "]"
 118) pexpr_no_paren : pexpr _ "[" oexpr ":" oexpr ":" oexpr "]"

  "("           shift, and go to state 149
  "."           shift, and go to state 151
  "!"           shift, and go to state 154
  "::"          shift, and go to state 150
  "["           shift, and go to state 152
  "?"           shift, and go to state 153

  special       go to state 148

state 207

 119) pexpr_no_paren : pseudocall _
 277) go_stmt : GO pseudocall _

  $end          reduce using rule 277 (go_stmt)
  OUTDENT       reduce using rule 277 (go_stmt)
  TERM          reduce using rule 277 (go_stmt)
  $default      reduce using rule 119 (pexpr_no_paren)


state 208

 278) go_stmt : GO "!" _ go_call

  "("           shift, and go to state 362

  go_call       go to state 361

state 209

 119) pexpr_no_paren : pseudocall _
 282) defer_stmt : DEFER pseudocall _

  $end          reduce using rule 282 (defer_stmt)
  OUTDENT       reduce using rule 282 (defer_stmt)
  TERM          reduce using rule 282 (defer_stmt)
  $default      reduce using rule 119 (pexpr_no_paren)


state 210

 283) goto_stmt : GOTO sym _

  $default      reduce using rule 283 (goto_stmt)


state 211

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 309) expr_list : expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 309 (expr_list)


state 212

 284) return_stmt : RETURN oexpr_list _

  $default      reduce using rule 284 (return_stmt)


state 213

 310) expr_list : expr_list _ comma expr
 318) oexpr_list : expr_list _

  ","           shift, and go to state 214
  $default      reduce using rule 318 (oexpr_list)

  comma         go to state 217

state 214

 158) comma : "," _

  $default      reduce using rule 158 (comma)


state 215

 295) simple_stmt : expr_list "=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 363

state 216

 296) simple_stmt : expr_list ":=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 364

state 217

 310) expr_list : expr_list comma _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 365
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 218

   5) imports : IMPORT import_stmt term _

  $default      reduce using rule 5 (imports)


state 219

   6) imports : IMPORT INDENT import_stmt_list _ OUTDENT
  11) import_stmt_list : import_stmt_list _ term import_stmt

  OUTDENT       shift, and go to state 366
  TERM          shift, and go to state 97

  term          go to state 367

state 220

  10) import_stmt_list : import_stmt _

  $default      reduce using rule 10 (import_stmt_list)


state 221

   8) import_stmt : sym string _

  $default      reduce using rule 8 (import_stmt)


state 222

   9) import_stmt : "." string _

  $default      reduce using rule 9 (import_stmt)


state 223

 140) sym : "@" "@" NAME _

  $default      reduce using rule 140 (sym)


state 224

 224) xdcl_list : xdcl_list term xdcl _

  $default      reduce using rule 224 (xdcl_list)


state 225

  19) common_dcl : VAR INDENT vardcl_list _ OUTDENT
 226) vardcl_list : vardcl_list _ term vardcl

  OUTDENT       shift, and go to state 368
  TERM          shift, and go to state 97

  term          go to state 369

state 226

 225) vardcl_list : vardcl _

  $default      reduce using rule 225 (vardcl_list)


state 227

  30) vardcl : dcl_name_list ntype _
  31) vardcl : dcl_name_list ntype _ "=" expr_list

  "="           shift, and go to state 370
  $default      reduce using rule 30 (vardcl)


state 228

  32) vardcl : dcl_name_list "=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr_list     go to state 371
  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 229

 162) ntype : recvchantype _

  $default      reduce using rule 162 (ntype)


state 230

 163) ntype : fntype _

  $default      reduce using rule 163 (ntype)


state 231

 164) ntype : othertype _

  $default      reduce using rule 164 (ntype)


state 232

 165) ntype : ptrtype _

  $default      reduce using rule 165 (ntype)


state 233

 166) ntype : dotname _

  $default      reduce using rule 166 (ntype)


state 234

 167) ntype : "(" _ ntype ")"

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  ntype         go to state 372
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62

state 235

 196) recvchantype : "<-" _ CHAN ntype

  CHAN          shift, and go to state 373


state 236

 308) dcl_name_list : dcl_name_list comma _ sym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 374

state 237

  21) common_dcl : CONST INDENT constdcl_list _ OUTDENT
 228) constdcl_list : constdcl_list _ term constdcl1

  OUTDENT       shift, and go to state 375
  TERM          shift, and go to state 97

  term          go to state 376

state 238

  33) constdcl : dcl_name_list _ ntype "=" expr_list
  34) constdcl : dcl_name_list _ "=" expr_list
  36) constdcl1 : dcl_name_list _ ntype
  37) constdcl1 : dcl_name_list _
 308) dcl_name_list : dcl_name_list _ comma sym

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "="           shift, and go to state 242
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  ","           shift, and go to state 214
  $default      reduce using rule 37 (constdcl1)

  ntype         go to state 377
  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  comma         go to state 236

state 239

  35) constdcl1 : constdcl _

  $default      reduce using rule 35 (constdcl1)


state 240

 227) constdcl_list : constdcl1 _

  $default      reduce using rule 227 (constdcl_list)


state 241

  33) constdcl : dcl_name_list ntype _ "=" expr_list

  "="           shift, and go to state 378


state 242

  34) constdcl : dcl_name_list "=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr_list     go to state 379
  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 243

  23) common_dcl : TYPE INDENT typedcl_list _ OUTDENT
 230) typedcl_list : typedcl_list _ term typedcl

  OUTDENT       shift, and go to state 380
  TERM          shift, and go to state 97

  term          go to state 381

state 244

 229) typedcl_list : typedcl _

  $default      reduce using rule 229 (typedcl_list)


state 245

  38) typedcl : sym ntype _

  $default      reduce using rule 38 (typedcl)


state 246

  25) oo_dcl : CLASS dotname dotname _
  27) oo_dcl : CLASS dotname dotname _ INDENT xdcl_list OUTDENT

  INDENT        shift, and go to state 382
  $default      reduce using rule 25 (oo_dcl)


state 247

  26) oo_dcl : CLASS dotname INDENT _ xdcl_list OUTDENT

  error         shift, and go to state 16
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DEF           shift, and go to state 65
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  MODULE        shift, and go to state 21
  CLASS         shift, and go to state 20
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 12 (xdcl)

  common_dcl    go to state 12
  oo_dcl        go to state 13
  xfndcl        go to state 14
  non_dcl_stmt  go to state 15
  xdcl_list     go to state 383
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  xdcl          go to state 69
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90

state 248

 186) dotname : name "." _ sym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 384

state 249

 187) dotname : name "::" _ sym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 385

state 250

  29) oo_dcl : MODULE dotname INDENT _ xdcl_list OUTDENT

  error         shift, and go to state 16
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DEF           shift, and go to state 65
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  MODULE        shift, and go to state 21
  CLASS         shift, and go to state 20
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 12 (xdcl)

  common_dcl    go to state 12
  oo_dcl        go to state 13
  xfndcl        go to state 14
  non_dcl_stmt  go to state 15
  xdcl_list     go to state 386
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  xdcl          go to state 69
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90

state 251

  47) range_stmt : expr_list "=" _ range
 295) simple_stmt : expr_list "=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  RANGE         shift, and go to state 388
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  range         go to state 387
  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 363

state 252

  48) range_stmt : expr_list ":=" _ range
 296) simple_stmt : expr_list ":=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  RANGE         shift, and go to state 388
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  range         go to state 389
  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 364

state 253

  49) range_stmt : expr_list inrange _

  $default      reduce using rule 49 (range_stmt)


state 254

  51) inrange : IN _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr          go to state 390
  uexpr         go to state 26
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 255

  52) for_header : osimple_stmt semi _ osimple_stmt semi osimple_stmt

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 319 (osimple_stmt)

  osimple_stmt  go to state 391
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 90
  simple_stmt   go to state 119

state 256

 157) semi : ";" _

  $default      reduce using rule 157 (semi)


state 257

  55) for_body : for_header suite_stmt _

  $default      reduce using rule 55 (for_body)


state 258

 299) suite_stmt : ":" _ small_stmt_list

  BREAK         shift, and go to state 394
  CHAN          shift, and go to state 59
  CONTINUE      shift, and go to state 395
  DEFER         shift, and go to state 397
  FALL          shift, and go to state 393
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 396
  GOTO          shift, and go to state 398
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  RETURN        shift, and go to state 399
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  simple_stmt   go to state 392
  expr_list     go to state 90
  small_stmt_list  go to state 400
  small_stmt    go to state 401

state 259

 300) suite_stmt : INDENT _ stmt_list OUTDENT

  error         shift, and go to state 358
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 256 (stmt)

  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  common_dcl    go to state 356
  non_dcl_stmt  go to state 357
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90
  stmt_list     go to state 402
  stmt          go to state 359

state 260

  58) if_header : simple_stmt semi _ osimple_stmt

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 319 (osimple_stmt)

  osimple_stmt  go to state 403
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 90
  simple_stmt   go to state 119

state 261

  59) if_stmt : IF if_header suite_stmt _ elseif_list else

  $default      reduce using rule 61 (elseif_list)

  elseif_list   go to state 404

state 262

  67) switch_stmt : SWITCH oif_header INDENT _ caseblock_list OUTDENT

  CASE          shift, and go to state 263
  DEFAULT       shift, and go to state 264

  case          go to state 265
  caseblock     go to state 266
  caseblock_list  go to state 405

state 263

  39) case : CASE _ expr_or_type_list
  40) case : CASE _ expr_or_type_list "=" expr
  41) case : CASE _ expr_or_type_list ":=" expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr_or_type_list  go to state 406
  uexpr         go to state 26
  expr          go to state 168
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  non_expr_type  go to state 172
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_or_type  go to state 291

state 264

  42) case : DEFAULT _

  $default      reduce using rule 42 (case)


state 265

  43) caseblock : case _
  44) caseblock : case _ suite_stmt

  INDENT        shift, and go to state 259
  ":"           shift, and go to state 258
  $default      reduce using rule 43 (caseblock)

  suite_stmt    go to state 407

state 266

  45) caseblock_list : caseblock _

  $default      reduce using rule 45 (caseblock_list)


state 267

  46) caseblock_list : caseblock_list _ term caseblock
  68) select_stmt : SELECT INDENT caseblock_list _ OUTDENT

  OUTDENT       shift, and go to state 409
  TERM          shift, and go to state 97

  term          go to state 408

state 268

  70) expr : expr _ "||" expr
  70) expr : expr "||" expr _
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  $default      reduce using rule 70 (expr)


state 269

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  71) expr : expr "&&" expr _
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  $default      reduce using rule 71 (expr)


state 270

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  72) expr : expr "==" expr _
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  $default      reduce using rule 72 (expr)


state 271

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  73) expr : expr "!=" expr _
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  $default      reduce using rule 73 (expr)


state 272

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  74) expr : expr "<" expr _
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  $default      reduce using rule 74 (expr)


state 273

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  75) expr : expr "<=" expr _
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  $default      reduce using rule 75 (expr)


state 274

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  76) expr : expr ">=" expr _
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  $default      reduce using rule 76 (expr)


state 275

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  77) expr : expr ">" expr _
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  $default      reduce using rule 77 (expr)


state 276

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  78) expr : expr "+" expr _
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  $default      reduce using rule 78 (expr)


state 277

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  79) expr : expr "-" expr _
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  $default      reduce using rule 79 (expr)


state 278

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  80) expr : expr "|" expr _
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  $default      reduce using rule 80 (expr)


state 279

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  81) expr : expr "^" expr _
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  $default      reduce using rule 81 (expr)


state 280

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  82) expr : expr "*" expr _
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  $default      reduce using rule 82 (expr)


state 281

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  83) expr : expr "/" expr _
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  $default      reduce using rule 83 (expr)


state 282

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  84) expr : expr "%" expr _
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  $default      reduce using rule 84 (expr)


state 283

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  85) expr : expr "&" expr _
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  $default      reduce using rule 85 (expr)


state 284

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  86) expr : expr "&^" expr _
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  $default      reduce using rule 86 (expr)


state 285

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  87) expr : expr "<<" expr _
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  $default      reduce using rule 87 (expr)


state 286

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  88) expr : expr ">>" expr _
  89) expr : expr _ "<-" expr

  $default      reduce using rule 88 (expr)


state 287

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
  89) expr : expr "<-" expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  $default      reduce using rule 89 (expr)


state 288

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 294) simple_stmt : expr COP expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 294 (simple_stmt)


state 289

 103) call : pexpr "(" ")" _

  $default      reduce using rule 103 (call)


state 290

 104) call : pexpr "(" expr_or_type_list _ ")"
 105) call : pexpr "(" expr_or_type_list _ "..." ")"
 312) expr_or_type_list : expr_or_type_list _ comma expr_or_type

  ")"           shift, and go to state 410
  "..."         shift, and go to state 411
  ","           shift, and go to state 214

  comma         go to state 412

state 291

 311) expr_or_type_list : expr_or_type _

  $default      reduce using rule 311 (expr_or_type_list)


state 292

 106) simple_call : nameo _ "(" ")"
 107) simple_call : nameo _ "(" expr_or_type_list ")"
 108) simple_call : nameo _ "(" expr_or_type_list "..." ")"

  "("           shift, and go to state 413


state 293

 109) call_self : pexpr "::" simple_call _

  $default      reduce using rule 109 (call_self)


state 294

 156) nameo : NAME _

  $default      reduce using rule 156 (nameo)


state 295

 113) pexpr_no_paren : pexpr "." sym _

  $default      reduce using rule 113 (pexpr_no_paren)


state 296

 114) pexpr_no_paren : pexpr "." "(" _ expr_or_type ")"
 115) pexpr_no_paren : pexpr "." "(" _ type ")"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  TYPE          shift, and go to state 416
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 168
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  expr_or_type  go to state 414
  type          go to state 415
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  non_expr_type  go to state 172
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 297

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 116) pexpr_no_paren : pexpr "[" expr _ "]"
 316) oexpr : expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  "]"           shift, and go to state 417
  $default      reduce using rule 316 (oexpr)


state 298

 117) pexpr_no_paren : pexpr "[" oexpr _ ":" oexpr "]"
 118) pexpr_no_paren : pexpr "[" oexpr _ ":" oexpr ":" oexpr "]"

  ":"           shift, and go to state 418


state 299

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 120) pexpr_no_paren : convtype "(" expr _ ")"

  ")"           shift, and go to state 419
  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144


state 300

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 126) keyval : expr _ ":" complitexpr
 127) complitexpr : expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  ":"           shift, and go to state 420
  $default      reduce using rule 127 (complitexpr)


state 301

 128) complitexpr : braced_keyval _

  $default      reduce using rule 128 (complitexpr)


state 302

 129) braced_keyval : "{" braced_keyval_list _ "}"

  "}"           shift, and go to state 421


state 303

 130) braced_keyval : "{" INDENT _ braced_keyval_list OUTDENT "}"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "{"           shift, and go to state 166
  "@"           shift, and go to state 9
  $default      reduce using rule 221 (braced_keyval_list)

  uexpr         go to state 26
  expr          go to state 300
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  braced_keyval  go to state 301
  braced_keyval_list  go to state 422
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  keyval        go to state 304
  complitexpr   go to state 305
  keyval_list   go to state 306

state 304

 217) keyval_list : keyval _

  $default      reduce using rule 217 (keyval_list)


state 305

 218) keyval_list : complitexpr _

  $default      reduce using rule 218 (keyval_list)


state 306

 219) keyval_list : keyval_list _ comma keyval
 220) keyval_list : keyval_list _ comma complitexpr
 222) braced_keyval_list : keyval_list _ ocomma

  ","           shift, and go to state 214
  $default      reduce using rule 313 (ocomma)

  comma         go to state 423
  ocomma        go to state 424

state 307

 171) non_expr_type : "*" non_expr_type _

  $default      reduce using rule 171 (non_expr_type)


state 308

 190) othertype : CHAN _ non_recvchantype
 191) othertype : CHAN _ "<-" ntype
 196) recvchantype : "<-" CHAN _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 429
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 430
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 425
  othertype     go to state 426
  ptrtype       go to state 427
  dotname       go to state 428
  name          go to state 112
  non_recvchantype  go to state 185
  structtype    go to state 61
  interfacetype  go to state 62
  ntype         go to state 431

state 309

 123) pexpr_no_paren : "(" expr_or_type ")" _ braced_keyval
 132) pexpr : "(" expr_or_type ")" _

  "{"           shift, and go to state 166
  $default      reduce using rule 132 (pexpr)

  braced_keyval  go to state 432

state 310

 273) label_stmt : NAME ":" INDENT _ stmt_list OUTDENT

  error         shift, and go to state 358
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 256 (stmt)

  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  common_dcl    go to state 356
  non_dcl_stmt  go to state 357
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  stmt_list     go to state 433
  expr_list     go to state 90
  stmt          go to state 359

state 311

 188) othertype : "[" oexpr "]" _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  ntype         go to state 434
  structtype    go to state 61
  interfacetype  go to state 62

state 312

 189) othertype : "[" "..." "]" _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  ntype         go to state 435
  structtype    go to state 61
  interfacetype  go to state 62

state 313

 176) non_recvchantype : "(" ntype _ ")"

  ")"           shift, and go to state 436


state 314

 191) othertype : CHAN "<-" ntype _

  $default      reduce using rule 191 (othertype)


state 315

 195) ptrtype : "*" ntype _

  $default      reduce using rule 195 (ptrtype)


state 316

 192) othertype : MAP "[" ntype _ "]" ntype

  "]"           shift, and go to state 437


state 317

 138) sym : NAME _
 156) nameo : NAME _

  OUTDENT       reduce using rule 156 (nameo)
  TERM          reduce using rule 156 (nameo)
  STRING        reduce using rule 156 (nameo)
  NUMBER        reduce using rule 156 (nameo)
  REGEX         reduce using rule 156 (nameo)
  "."           reduce using rule 156 (nameo)
  "}"           reduce using rule 156 (nameo)
  $default      reduce using rule 138 (sym)


state 318

 197) structtype : STRUCT "{" "}" _

  $default      reduce using rule 197 (structtype)


state 319

 198) structtype : STRUCT "{" structdcl_list _ "}"
 232) structdcl_list : structdcl_list _ term structdcl

  TERM          shift, and go to state 97
  "}"           shift, and go to state 438

  term          go to state 439

state 320

 231) structdcl_list : structdcl _

  $default      reduce using rule 231 (structdcl_list)


state 321

 235) structdcl : sym_list _ ntype oliteral
 306) sym_list : sym_list _ comma sym

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  ","           shift, and go to state 214

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  ntype         go to state 440
  comma         go to state 441

state 322

 236) structdcl : embed _ oliteral

  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  $default      reduce using rule 321 (oliteral)

  string        go to state 52
  number        go to state 53
  regex         go to state 54
  oliteral      go to state 442
  literal       go to state 443

state 323

 237) structdcl : "(" _ embed ")" oliteral
 239) structdcl : "(" _ "*" embed ")" oliteral

  NAME          shift, and go to state 294
  "*"           shift, and go to state 445

  embed         go to state 444
  nameo         go to state 325
  packname      go to state 326

state 324

 238) structdcl : "*" _ embed oliteral
 240) structdcl : "*" _ "(" embed ")" oliteral

  NAME          shift, and go to state 294
  "("           shift, and go to state 447

  embed         go to state 446
  nameo         go to state 325
  packname      go to state 326

state 325

 241) packname : nameo _
 242) packname : nameo _ "." sym

  "."           shift, and go to state 448
  $default      reduce using rule 241 (packname)


state 326

 243) embed : packname _

  $default      reduce using rule 243 (embed)


state 327

 305) sym_list : sym _

  $default      reduce using rule 305 (sym_list)


state 328

 199) structtype : STRUCT INDENT structdcl_list _ OUTDENT
 232) structdcl_list : structdcl_list _ term structdcl

  OUTDENT       shift, and go to state 449
  TERM          shift, and go to state 97

  term          go to state 439

state 329

 200) interfacetype : INTERFACE "{" "}" _

  $default      reduce using rule 200 (interfacetype)


state 330

 201) interfacetype : INTERFACE "{" interfacedcl_list _ "}"
 234) interfacedcl_list : interfacedcl_list _ term interfacedcl

  TERM          shift, and go to state 97
  "}"           shift, and go to state 450

  term          go to state 451

state 331

 233) interfacedcl_list : interfacedcl _

  $default      reduce using rule 233 (interfacedcl_list)


state 332

 244) interfacedcl : sym _ indcl

  "("           shift, and go to state 453

  indcl         go to state 452

state 333

 245) interfacedcl : packname _

  $default      reduce using rule 245 (interfacedcl)


state 334

 246) interfacedcl : "(" _ packname ")"

  NAME          shift, and go to state 294

  nameo         go to state 325
  packname      go to state 454

state 335

 202) interfacetype : INTERFACE INDENT interfacedcl_list _ OUTDENT
 234) interfacedcl_list : interfacedcl_list _ term interfacedcl

  OUTDENT       shift, and go to state 455
  TERM          shift, and go to state 97

  term          go to state 451

state 336

 203) fndcl : fname "(" _ oarg_type_list ")" fnres

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "..."         shift, and go to state 342
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 254 (oarg_type_list)

  ntype         go to state 340
  sym           go to state 341
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  oarg_type_list  go to state 456
  name_or_type  go to state 344
  dotdotdot     go to state 345
  arg_type      go to state 346
  arg_type_list  go to state 347

state 337

 204) xfndcl : DEF fndcl suite_stmt _

  $default      reduce using rule 204 (xfndcl)


state 338

 212) optr : "*" optr _

  $default      reduce using rule 212 (optr)


state 339

 213) fname : optr dotname _ ospecialfn

  "="           shift, and go to state 458
  "!"           shift, and go to state 154
  "["           shift, and go to state 457
  "?"           shift, and go to state 153
  $default      reduce using rule 153 (ospecialfn)

  special       go to state 459
  specialfn     go to state 460
  ospecialfn    go to state 461

state 340

 135) name_or_type : ntype _

  $default      reduce using rule 135 (name_or_type)


state 341

 155) name : sym _
 249) arg_type : sym _ name_or_type
 250) arg_type : sym _ dotdotdot

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "..."         shift, and go to state 342
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 155 (name)

  ntype         go to state 340
  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  name_or_type  go to state 462
  dotdotdot     go to state 463

state 342

 160) dotdotdot : "..." _
 161) dotdotdot : "..." _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 160 (dotdotdot)

  sym           go to state 55
  ntype         go to state 464
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62

state 343

 206) fnlitdcl : DO "(" oarg_type_list _ ")" fnres

  ")"           shift, and go to state 465


state 344

 248) arg_type : name_or_type _

  $default      reduce using rule 248 (arg_type)


state 345

 251) arg_type : dotdotdot _

  $default      reduce using rule 251 (arg_type)


state 346

 252) arg_type_list : arg_type _

  $default      reduce using rule 252 (arg_type_list)


state 347

 253) arg_type_list : arg_type_list _ comma arg_type
 255) oarg_type_list : arg_type_list _

  ","           shift, and go to state 214
  $default      reduce using rule 255 (oarg_type_list)

  comma         go to state 466

state 348

 180) fnret_type : recvchantype _

  $default      reduce using rule 180 (fnret_type)


state 349

 181) fnret_type : fntype _

  $default      reduce using rule 181 (fnret_type)


state 350

 182) fnret_type : othertype _

  $default      reduce using rule 182 (fnret_type)


state 351

 183) fnret_type : ptrtype _

  $default      reduce using rule 183 (fnret_type)


state 352

 184) fnret_type : dotname _

  $default      reduce using rule 184 (fnret_type)


state 353

 215) fnres : "->" fnret_type _

  $default      reduce using rule 215 (fnres)


state 354

 216) fnres : "->" "(" _ oarg_type_list ")"

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "..."         shift, and go to state 342
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 254 (oarg_type_list)

  ntype         go to state 340
  sym           go to state 341
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  oarg_type_list  go to state 467
  name_or_type  go to state 344
  dotdotdot     go to state 345
  arg_type      go to state 346
  arg_type_list  go to state 347

state 355

 208) fnliteral : fnlitdcl INDENT stmt_list _ OUTDENT
 304) stmt_list : stmt_list _ term stmt

  OUTDENT       shift, and go to state 468
  TERM          shift, and go to state 97

  term          go to state 469

state 356

 257) stmt : common_dcl _

  $default      reduce using rule 257 (stmt)


state 357

 258) stmt : non_dcl_stmt _

  $default      reduce using rule 258 (stmt)


state 358

 259) stmt : error _

  $default      reduce using rule 259 (stmt)


state 359

 303) stmt_list : stmt _

  $default      reduce using rule 303 (stmt_list)


state 360

 210) fntype : FUNC "(" oarg_type_list _ ")" fnres

  ")"           shift, and go to state 470


state 361

 278) go_stmt : GO "!" go_call _

  $default      reduce using rule 278 (go_stmt)


state 362

 279) go_call : "(" _ ")" fnlitdcl
 280) go_call : "(" _ expr_or_type_list ")" fnliteral
 281) go_call : "(" _ expr_or_type_list "..." ")" fnliteral

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  ")"           shift, and go to state 471
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 168
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  non_expr_type  go to state 172
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_or_type_list  go to state 472
  expr_or_type  go to state 291

state 363

 295) simple_stmt : expr_list "=" expr_list _
 310) expr_list : expr_list _ comma expr

  ","           shift, and go to state 214
  $default      reduce using rule 295 (simple_stmt)

  comma         go to state 217

state 364

 296) simple_stmt : expr_list ":=" expr_list _
 310) expr_list : expr_list _ comma expr

  ","           shift, and go to state 214
  $default      reduce using rule 296 (simple_stmt)

  comma         go to state 217

state 365

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 310) expr_list : expr_list comma expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 310 (expr_list)


state 366

   6) imports : IMPORT INDENT import_stmt_list OUTDENT _

  $default      reduce using rule 6 (imports)


state 367

  11) import_stmt_list : import_stmt_list term _ import_stmt

  NAME          shift, and go to state 8
  STRING        shift, and go to state 50
  "."           shift, and go to state 95
  "@"           shift, and go to state 9

  string        go to state 93
  sym           go to state 94
  import_stmt   go to state 473

state 368

  19) common_dcl : VAR INDENT vardcl_list OUTDENT _

  $default      reduce using rule 19 (common_dcl)


state 369

 226) vardcl_list : vardcl_list term _ vardcl

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  dcl_name_list  go to state 103
  vardcl        go to state 474
  sym           go to state 104

state 370

  31) vardcl : dcl_name_list ntype "=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr_list     go to state 475
  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 371

  32) vardcl : dcl_name_list "=" expr_list _
 310) expr_list : expr_list _ comma expr

  ","           shift, and go to state 214
  $default      reduce using rule 32 (vardcl)

  comma         go to state 217

state 372

 167) ntype : "(" ntype _ ")"

  ")"           shift, and go to state 476


state 373

 196) recvchantype : "<-" CHAN _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  ntype         go to state 431

state 374

 308) dcl_name_list : dcl_name_list comma sym _

  $default      reduce using rule 308 (dcl_name_list)


state 375

  21) common_dcl : CONST INDENT constdcl_list OUTDENT _

  $default      reduce using rule 21 (common_dcl)


state 376

 228) constdcl_list : constdcl_list term _ constdcl1

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  dcl_name_list  go to state 238
  constdcl      go to state 239
  constdcl1     go to state 477
  sym           go to state 104

state 377

  33) constdcl : dcl_name_list ntype _ "=" expr_list
  36) constdcl1 : dcl_name_list ntype _

  "="           shift, and go to state 378
  $default      reduce using rule 36 (constdcl1)


state 378

  33) constdcl : dcl_name_list ntype "=" _ expr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr_list     go to state 478
  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 379

  34) constdcl : dcl_name_list "=" expr_list _
 310) expr_list : expr_list _ comma expr

  ","           shift, and go to state 214
  $default      reduce using rule 34 (constdcl)

  comma         go to state 217

state 380

  23) common_dcl : TYPE INDENT typedcl_list OUTDENT _

  $default      reduce using rule 23 (common_dcl)


state 381

 230) typedcl_list : typedcl_list term _ typedcl

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 110
  typedcl       go to state 479

state 382

  27) oo_dcl : CLASS dotname dotname INDENT _ xdcl_list OUTDENT

  error         shift, and go to state 16
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DEF           shift, and go to state 65
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  MODULE        shift, and go to state 21
  CLASS         shift, and go to state 20
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 12 (xdcl)

  common_dcl    go to state 12
  oo_dcl        go to state 13
  xfndcl        go to state 14
  non_dcl_stmt  go to state 15
  xdcl_list     go to state 480
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  xdcl          go to state 69
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90

state 383

  26) oo_dcl : CLASS dotname INDENT xdcl_list _ OUTDENT
 224) xdcl_list : xdcl_list _ term xdcl

  OUTDENT       shift, and go to state 481
  TERM          shift, and go to state 97

  term          go to state 100

state 384

 186) dotname : name "." sym _

  $default      reduce using rule 186 (dotname)


state 385

 187) dotname : name "::" sym _

  $default      reduce using rule 187 (dotname)


state 386

  29) oo_dcl : MODULE dotname INDENT xdcl_list _ OUTDENT
 224) xdcl_list : xdcl_list _ term xdcl

  OUTDENT       shift, and go to state 482
  TERM          shift, and go to state 97

  term          go to state 100

state 387

  47) range_stmt : expr_list "=" range _

  $default      reduce using rule 47 (range_stmt)


state 388

  50) range : RANGE _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr          go to state 483
  uexpr         go to state 26
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 389

  48) range_stmt : expr_list ":=" range _

  $default      reduce using rule 48 (range_stmt)


state 390

  51) inrange : IN expr _
  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 51 (inrange)


state 391

  52) for_header : osimple_stmt semi osimple_stmt _ semi osimple_stmt

  ";"           shift, and go to state 256

  semi          go to state 484

state 392

 285) small_stmt : simple_stmt _

  $default      reduce using rule 285 (small_stmt)


state 393

 286) small_stmt : FALL _

  $default      reduce using rule 286 (small_stmt)


state 394

 287) small_stmt : BREAK _ osym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9
  $default      reduce using rule 136 (osym)

  sym           go to state 203
  osym          go to state 485

state 395

 288) small_stmt : CONTINUE _ osym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9
  $default      reduce using rule 136 (osym)

  sym           go to state 203
  osym          go to state 486

state 396

 289) small_stmt : GO _ pseudocall

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  pexpr         go to state 206
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 487
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 397

 290) small_stmt : DEFER _ pseudocall

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  pexpr         go to state 206
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 488
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 398

 291) small_stmt : GOTO _ sym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 489

state 399

 292) small_stmt : RETURN _ oexpr_list

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 317 (oexpr_list)

  uexpr         go to state 26
  expr          go to state 211
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  oexpr_list    go to state 490
  expr_list     go to state 213

state 400

 299) suite_stmt : ":" small_stmt_list _
 302) small_stmt_list : small_stmt_list _ ";" small_stmt

  ";"           shift, and go to state 491
  $default      reduce using rule 299 (suite_stmt)


state 401

 301) small_stmt_list : small_stmt _

  $default      reduce using rule 301 (small_stmt_list)


state 402

 300) suite_stmt : INDENT stmt_list _ OUTDENT
 304) stmt_list : stmt_list _ term stmt

  OUTDENT       shift, and go to state 492
  TERM          shift, and go to state 97

  term          go to state 469

state 403

  58) if_header : simple_stmt semi osimple_stmt _

  $default      reduce using rule 58 (if_header)


state 404

  59) if_stmt : IF if_header suite_stmt elseif_list _ else
  62) elseif_list : elseif_list _ elseif

  ELSE          shift, and go to state 494
  $default      reduce using rule 63 (else)

  else          go to state 493
  elseif        go to state 495

state 405

  46) caseblock_list : caseblock_list _ term caseblock
  67) switch_stmt : SWITCH oif_header INDENT caseblock_list _ OUTDENT

  OUTDENT       shift, and go to state 496
  TERM          shift, and go to state 97

  term          go to state 408

state 406

  39) case : CASE expr_or_type_list _
  40) case : CASE expr_or_type_list _ "=" expr
  41) case : CASE expr_or_type_list _ ":=" expr
 312) expr_or_type_list : expr_or_type_list _ comma expr_or_type

  "="           shift, and go to state 497
  ":="          shift, and go to state 498
  ","           shift, and go to state 214
  $default      reduce using rule 39 (case)

  comma         go to state 412

state 407

  44) caseblock : case suite_stmt _

  $default      reduce using rule 44 (caseblock)


state 408

  46) caseblock_list : caseblock_list term _ caseblock

  CASE          shift, and go to state 263
  DEFAULT       shift, and go to state 264

  case          go to state 265
  caseblock     go to state 499

state 409

  68) select_stmt : SELECT INDENT caseblock_list OUTDENT _

  $default      reduce using rule 68 (select_stmt)


state 410

 104) call : pexpr "(" expr_or_type_list ")" _

  $default      reduce using rule 104 (call)


state 411

 105) call : pexpr "(" expr_or_type_list "..." _ ")"

  ")"           shift, and go to state 500


state 412

 312) expr_or_type_list : expr_or_type_list comma _ expr_or_type

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 168
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  non_expr_type  go to state 172
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_or_type  go to state 501

state 413

 106) simple_call : nameo "(" _ ")"
 107) simple_call : nameo "(" _ expr_or_type_list ")"
 108) simple_call : nameo "(" _ expr_or_type_list "..." ")"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  ")"           shift, and go to state 502
  "("           shift, and go to state 46
  "*"           shift, and go to state 169
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 170
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 168
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  expr_or_type_list  go to state 503
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  non_expr_type  go to state 172
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  recvchantype  go to state 173
  fntype        go to state 174
  othertype     go to state 175
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_or_type  go to state 291

state 414

 114) pexpr_no_paren : pexpr "." "(" expr_or_type _ ")"

  ")"           shift, and go to state 504


state 415

 115) pexpr_no_paren : pexpr "." "(" type _ ")"

  ")"           shift, and go to state 505


state 416

 125) type : TYPE _

  $default      reduce using rule 125 (type)


state 417

 116) pexpr_no_paren : pexpr "[" expr "]" _

  $default      reduce using rule 116 (pexpr_no_paren)


state 418

 117) pexpr_no_paren : pexpr "[" oexpr ":" _ oexpr "]"
 118) pexpr_no_paren : pexpr "[" oexpr ":" _ oexpr ":" oexpr "]"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 315 (oexpr)

  uexpr         go to state 26
  expr          go to state 177
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  oexpr         go to state 506
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 419

 120) pexpr_no_paren : convtype "(" expr ")" _

  $default      reduce using rule 120 (pexpr_no_paren)


state 420

 126) keyval : expr ":" _ complitexpr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "{"           shift, and go to state 166
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 507
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  complitexpr   go to state 508
  braced_keyval  go to state 301
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 421

 129) braced_keyval : "{" braced_keyval_list "}" _

  $default      reduce using rule 129 (braced_keyval)


state 422

 130) braced_keyval : "{" INDENT braced_keyval_list _ OUTDENT "}"

  OUTDENT       shift, and go to state 509


state 423

 219) keyval_list : keyval_list comma _ keyval
 220) keyval_list : keyval_list comma _ complitexpr
 314) ocomma : comma _

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "{"           shift, and go to state 166
  "@"           shift, and go to state 9
  $default      reduce using rule 314 (ocomma)

  uexpr         go to state 26
  expr          go to state 300
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  braced_keyval  go to state 301
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  keyval        go to state 510
  complitexpr   go to state 511

state 424

 222) braced_keyval_list : keyval_list ocomma _

  $default      reduce using rule 222 (braced_keyval_list)


state 425

 163) ntype : fntype _
 172) non_recvchantype : fntype _

  "("           reduce using rule 172 (non_recvchantype)
  "{"           reduce using rule 172 (non_recvchantype)
  $default      reduce using rule 163 (ntype)


state 426

 164) ntype : othertype _
 173) non_recvchantype : othertype _

  "("           reduce using rule 173 (non_recvchantype)
  "{"           reduce using rule 173 (non_recvchantype)
  $default      reduce using rule 164 (ntype)


state 427

 165) ntype : ptrtype _
 174) non_recvchantype : ptrtype _

  "("           reduce using rule 174 (non_recvchantype)
  "{"           reduce using rule 174 (non_recvchantype)
  $default      reduce using rule 165 (ntype)


state 428

 166) ntype : dotname _
 175) non_recvchantype : dotname _

  "("           reduce using rule 175 (non_recvchantype)
  "{"           reduce using rule 175 (non_recvchantype)
  $default      reduce using rule 166 (ntype)


state 429

 167) ntype : "(" _ ntype ")"
 176) non_recvchantype : "(" _ ntype ")"

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  ntype         go to state 512
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62

state 430

 191) othertype : CHAN "<-" _ ntype
 196) recvchantype : "<-" _ CHAN ntype

  CHAN          shift, and go to state 308
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  ntype         go to state 314
  structtype    go to state 61
  interfacetype  go to state 62

state 431

 196) recvchantype : "<-" CHAN ntype _

  $default      reduce using rule 196 (recvchantype)


state 432

 123) pexpr_no_paren : "(" expr_or_type ")" braced_keyval _

  $default      reduce using rule 123 (pexpr_no_paren)


state 433

 273) label_stmt : NAME ":" INDENT stmt_list _ OUTDENT
 304) stmt_list : stmt_list _ term stmt

  OUTDENT       shift, and go to state 513
  TERM          shift, and go to state 97

  term          go to state 469

state 434

 188) othertype : "[" oexpr "]" ntype _

  $default      reduce using rule 188 (othertype)


state 435

 189) othertype : "[" "..." "]" ntype _

  $default      reduce using rule 189 (othertype)


state 436

 176) non_recvchantype : "(" ntype ")" _

  $default      reduce using rule 176 (non_recvchantype)


state 437

 192) othertype : MAP "[" ntype "]" _ ntype

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  sym           go to state 55
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  ntype         go to state 514
  structtype    go to state 61
  interfacetype  go to state 62

state 438

 198) structtype : STRUCT "{" structdcl_list "}" _

  $default      reduce using rule 198 (structtype)


state 439

 232) structdcl_list : structdcl_list term _ structdcl

  NAME          shift, and go to state 317
  "("           shift, and go to state 323
  "*"           shift, and go to state 324
  "@"           shift, and go to state 9

  structdcl     go to state 515
  sym_list      go to state 321
  embed         go to state 322
  nameo         go to state 325
  packname      go to state 326
  sym           go to state 327

state 440

 235) structdcl : sym_list ntype _ oliteral

  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  $default      reduce using rule 321 (oliteral)

  string        go to state 52
  number        go to state 53
  regex         go to state 54
  oliteral      go to state 516
  literal       go to state 443

state 441

 306) sym_list : sym_list comma _ sym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 517

state 442

 236) structdcl : embed oliteral _

  $default      reduce using rule 236 (structdcl)


state 443

 322) oliteral : literal _

  $default      reduce using rule 322 (oliteral)


state 444

 237) structdcl : "(" embed _ ")" oliteral

  ")"           shift, and go to state 518


state 445

 239) structdcl : "(" "*" _ embed ")" oliteral

  NAME          shift, and go to state 294

  embed         go to state 519
  nameo         go to state 325
  packname      go to state 326

state 446

 238) structdcl : "*" embed _ oliteral

  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  $default      reduce using rule 321 (oliteral)

  string        go to state 52
  number        go to state 53
  regex         go to state 54
  oliteral      go to state 520
  literal       go to state 443

state 447

 240) structdcl : "*" "(" _ embed ")" oliteral

  NAME          shift, and go to state 294

  embed         go to state 521
  nameo         go to state 325
  packname      go to state 326

state 448

 242) packname : nameo "." _ sym

  NAME          shift, and go to state 8
  "@"           shift, and go to state 9

  sym           go to state 522

state 449

 199) structtype : STRUCT INDENT structdcl_list OUTDENT _

  $default      reduce using rule 199 (structtype)


state 450

 201) interfacetype : INTERFACE "{" interfacedcl_list "}" _

  $default      reduce using rule 201 (interfacetype)


state 451

 234) interfacedcl_list : interfacedcl_list term _ interfacedcl

  NAME          shift, and go to state 317
  "("           shift, and go to state 334
  "@"           shift, and go to state 9

  interfacedcl  go to state 523
  nameo         go to state 325
  sym           go to state 332
  packname      go to state 333

state 452

 244) interfacedcl : sym indcl _

  $default      reduce using rule 244 (interfacedcl)


state 453

 247) indcl : "(" _ oarg_type_list ")" fnres

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "..."         shift, and go to state 342
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 254 (oarg_type_list)

  ntype         go to state 340
  sym           go to state 341
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  oarg_type_list  go to state 524
  name_or_type  go to state 344
  dotdotdot     go to state 345
  arg_type      go to state 346
  arg_type_list  go to state 347

state 454

 246) interfacedcl : "(" packname _ ")"

  ")"           shift, and go to state 525


state 455

 202) interfacetype : INTERFACE INDENT interfacedcl_list OUTDENT _

  $default      reduce using rule 202 (interfacetype)


state 456

 203) fndcl : fname "(" oarg_type_list _ ")" fnres

  ")"           shift, and go to state 526


state 457

 149) specialfn : "[" _ "]"
 150) specialfn : "[" _ "]" "="

  "]"           shift, and go to state 527


state 458

 151) specialfn : "=" _

  $default      reduce using rule 151 (specialfn)


state 459

 152) specialfn : special _

  $default      reduce using rule 152 (specialfn)


state 460

 154) ospecialfn : specialfn _

  $default      reduce using rule 154 (ospecialfn)


state 461

 213) fname : optr dotname ospecialfn _

  $default      reduce using rule 213 (fname)


state 462

 249) arg_type : sym name_or_type _

  $default      reduce using rule 249 (arg_type)


state 463

 250) arg_type : sym dotdotdot _

  $default      reduce using rule 250 (arg_type)


state 464

 161) dotdotdot : "..." ntype _

  $default      reduce using rule 161 (dotdotdot)


state 465

 206) fnlitdcl : DO "(" oarg_type_list ")" _ fnres

  "->"          shift, and go to state 199
  $default      reduce using rule 214 (fnres)

  fnres         go to state 528

state 466

 253) arg_type_list : arg_type_list comma _ arg_type

  CHAN          shift, and go to state 59
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  "("           shift, and go to state 234
  "*"           shift, and go to state 187
  "<-"          shift, and go to state 235
  "..."         shift, and go to state 342
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  ntype         go to state 340
  sym           go to state 341
  recvchantype  go to state 229
  fntype        go to state 230
  othertype     go to state 231
  ptrtype       go to state 232
  dotname       go to state 233
  name          go to state 112
  structtype    go to state 61
  interfacetype  go to state 62
  name_or_type  go to state 344
  dotdotdot     go to state 345
  arg_type      go to state 529

state 467

 216) fnres : "->" "(" oarg_type_list _ ")"

  ")"           shift, and go to state 530


state 468

 208) fnliteral : fnlitdcl INDENT stmt_list OUTDENT _

  $default      reduce using rule 208 (fnliteral)


state 469

 304) stmt_list : stmt_list term _ stmt

  error         shift, and go to state 358
  BREAK         shift, and go to state 84
  CHAN          shift, and go to state 59
  CONST         shift, and go to state 18
  CONTINUE      shift, and go to state 85
  DEFER         shift, and go to state 87
  FALL          shift, and go to state 83
  FOR           shift, and go to state 22
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 86
  GOTO          shift, and go to state 88
  IF            shift, and go to state 23
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 48
  RETURN        shift, and go to state 89
  SELECT        shift, and go to state 25
  STRUCT        shift, and go to state 63
  SWITCH        shift, and go to state 24
  TYPE          shift, and go to state 19
  VAR           shift, and go to state 17
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 256 (stmt)

  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  common_dcl    go to state 356
  non_dcl_stmt  go to state 357
  simple_stmt   go to state 70
  for_stmt      go to state 71
  switch_stmt   go to state 72
  select_stmt   go to state 73
  label_stmt    go to state 74
  if_stmt       go to state 75
  fall_stmt     go to state 76
  break_stmt    go to state 77
  continue_stmt  go to state 78
  go_stmt       go to state 79
  defer_stmt    go to state 80
  goto_stmt     go to state 81
  return_stmt   go to state 82
  expr_list     go to state 90
  stmt          go to state 531

state 470

 210) fntype : FUNC "(" oarg_type_list ")" _ fnres

  "->"          shift, and go to state 199
  $default      reduce using rule 214 (fnres)

  fnres         go to state 532

state 471

 279) go_call : "(" ")" _ fnlitdcl

  DO            shift, and go to state 66

  fnlitdcl      go to state 533

state 472

 280) go_call : "(" expr_or_type_list _ ")" fnliteral
 281) go_call : "(" expr_or_type_list _ "..." ")" fnliteral
 312) expr_or_type_list : expr_or_type_list _ comma expr_or_type

  ")"           shift, and go to state 534
  "..."         shift, and go to state 535
  ","           shift, and go to state 214

  comma         go to state 412

state 473

  11) import_stmt_list : import_stmt_list term import_stmt _

  $default      reduce using rule 11 (import_stmt_list)


state 474

 226) vardcl_list : vardcl_list term vardcl _

  $default      reduce using rule 226 (vardcl_list)


state 475

  31) vardcl : dcl_name_list ntype "=" expr_list _
 310) expr_list : expr_list _ comma expr

  ","           shift, and go to state 214
  $default      reduce using rule 31 (vardcl)

  comma         go to state 217

state 476

 167) ntype : "(" ntype ")" _

  $default      reduce using rule 167 (ntype)


state 477

 228) constdcl_list : constdcl_list term constdcl1 _

  $default      reduce using rule 228 (constdcl_list)


state 478

  33) constdcl : dcl_name_list ntype "=" expr_list _
 310) expr_list : expr_list _ comma expr

  ","           shift, and go to state 214
  $default      reduce using rule 33 (constdcl)

  comma         go to state 217

state 479

 230) typedcl_list : typedcl_list term typedcl _

  $default      reduce using rule 230 (typedcl_list)


state 480

  27) oo_dcl : CLASS dotname dotname INDENT xdcl_list _ OUTDENT
 224) xdcl_list : xdcl_list _ term xdcl

  OUTDENT       shift, and go to state 536
  TERM          shift, and go to state 97

  term          go to state 100

state 481

  26) oo_dcl : CLASS dotname INDENT xdcl_list OUTDENT _

  $default      reduce using rule 26 (oo_dcl)


state 482

  29) oo_dcl : MODULE dotname INDENT xdcl_list OUTDENT _

  $default      reduce using rule 29 (oo_dcl)


state 483

  50) range : RANGE expr _
  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 50 (range)


state 484

  52) for_header : osimple_stmt semi osimple_stmt semi _ osimple_stmt

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 319 (osimple_stmt)

  osimple_stmt  go to state 537
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 90
  simple_stmt   go to state 119

state 485

 287) small_stmt : BREAK osym _

  $default      reduce using rule 287 (small_stmt)


state 486

 288) small_stmt : CONTINUE osym _

  $default      reduce using rule 288 (small_stmt)


state 487

 119) pexpr_no_paren : pseudocall _
 289) small_stmt : GO pseudocall _

  $end          reduce using rule 289 (small_stmt)
  ELSE          reduce using rule 289 (small_stmt)
  OUTDENT       reduce using rule 289 (small_stmt)
  TERM          reduce using rule 289 (small_stmt)
  ";"           reduce using rule 289 (small_stmt)
  $default      reduce using rule 119 (pexpr_no_paren)


state 488

 119) pexpr_no_paren : pseudocall _
 290) small_stmt : DEFER pseudocall _

  $end          reduce using rule 290 (small_stmt)
  ELSE          reduce using rule 290 (small_stmt)
  OUTDENT       reduce using rule 290 (small_stmt)
  TERM          reduce using rule 290 (small_stmt)
  ";"           reduce using rule 290 (small_stmt)
  $default      reduce using rule 119 (pexpr_no_paren)


state 489

 291) small_stmt : GOTO sym _

  $default      reduce using rule 291 (small_stmt)


state 490

 292) small_stmt : RETURN oexpr_list _

  $default      reduce using rule 292 (small_stmt)


state 491

 302) small_stmt_list : small_stmt_list ";" _ small_stmt

  BREAK         shift, and go to state 394
  CHAN          shift, and go to state 59
  CONTINUE      shift, and go to state 395
  DEFER         shift, and go to state 397
  FALL          shift, and go to state 393
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  GO            shift, and go to state 396
  GOTO          shift, and go to state 398
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  RETURN        shift, and go to state 399
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  simple_stmt   go to state 392
  expr_list     go to state 90
  small_stmt    go to state 538

state 492

 300) suite_stmt : INDENT stmt_list OUTDENT _

  $default      reduce using rule 300 (suite_stmt)


state 493

  59) if_stmt : IF if_header suite_stmt elseif_list else _

  $default      reduce using rule 59 (if_stmt)


state 494

  60) elseif : ELSE _ IF if_header suite_stmt
  64) else : ELSE _ suite_stmt

  IF            shift, and go to state 539
  INDENT        shift, and go to state 259
  ":"           shift, and go to state 258

  suite_stmt    go to state 540

state 495

  62) elseif_list : elseif_list elseif _

  $default      reduce using rule 62 (elseif_list)


state 496

  67) switch_stmt : SWITCH oif_header INDENT caseblock_list OUTDENT _

  $default      reduce using rule 67 (switch_stmt)


state 497

  40) case : CASE expr_or_type_list "=" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr          go to state 541
  uexpr         go to state 26
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 498

  41) case : CASE expr_or_type_list ":=" _ expr

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  expr          go to state 542
  uexpr         go to state 26
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 499

  46) caseblock_list : caseblock_list term caseblock _

  $default      reduce using rule 46 (caseblock_list)


state 500

 105) call : pexpr "(" expr_or_type_list "..." ")" _

  $default      reduce using rule 105 (call)


state 501

 312) expr_or_type_list : expr_or_type_list comma expr_or_type _

  $default      reduce using rule 312 (expr_or_type_list)


state 502

 106) simple_call : nameo "(" ")" _

  $default      reduce using rule 106 (simple_call)


state 503

 107) simple_call : nameo "(" expr_or_type_list _ ")"
 108) simple_call : nameo "(" expr_or_type_list _ "..." ")"
 312) expr_or_type_list : expr_or_type_list _ comma expr_or_type

  ")"           shift, and go to state 543
  "..."         shift, and go to state 544
  ","           shift, and go to state 214

  comma         go to state 412

state 504

 114) pexpr_no_paren : pexpr "." "(" expr_or_type ")" _

  $default      reduce using rule 114 (pexpr_no_paren)


state 505

 115) pexpr_no_paren : pexpr "." "(" type ")" _

  $default      reduce using rule 115 (pexpr_no_paren)


state 506

 117) pexpr_no_paren : pexpr "[" oexpr ":" oexpr _ "]"
 118) pexpr_no_paren : pexpr "[" oexpr ":" oexpr _ ":" oexpr "]"

  "]"           shift, and go to state 545
  ":"           shift, and go to state 546


state 507

  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr
 127) complitexpr : expr _

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 127 (complitexpr)


state 508

 126) keyval : expr ":" complitexpr _

  $default      reduce using rule 126 (keyval)


state 509

 130) braced_keyval : "{" INDENT braced_keyval_list OUTDENT _ "}"

  "}"           shift, and go to state 547


state 510

 219) keyval_list : keyval_list comma keyval _

  $default      reduce using rule 219 (keyval_list)


state 511

 220) keyval_list : keyval_list comma complitexpr _

  $default      reduce using rule 220 (keyval_list)


state 512

 167) ntype : "(" ntype _ ")"
 176) non_recvchantype : "(" ntype _ ")"

  ")"           shift, and go to state 548


state 513

 273) label_stmt : NAME ":" INDENT stmt_list OUTDENT _

  $default      reduce using rule 273 (label_stmt)


state 514

 192) othertype : MAP "[" ntype "]" ntype _

  $default      reduce using rule 192 (othertype)


state 515

 232) structdcl_list : structdcl_list term structdcl _

  $default      reduce using rule 232 (structdcl_list)


state 516

 235) structdcl : sym_list ntype oliteral _

  $default      reduce using rule 235 (structdcl)


state 517

 306) sym_list : sym_list comma sym _

  $default      reduce using rule 306 (sym_list)


state 518

 237) structdcl : "(" embed ")" _ oliteral

  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  $default      reduce using rule 321 (oliteral)

  string        go to state 52
  number        go to state 53
  regex         go to state 54
  oliteral      go to state 549
  literal       go to state 443

state 519

 239) structdcl : "(" "*" embed _ ")" oliteral

  ")"           shift, and go to state 550


state 520

 238) structdcl : "*" embed oliteral _

  $default      reduce using rule 238 (structdcl)


state 521

 240) structdcl : "*" "(" embed _ ")" oliteral

  ")"           shift, and go to state 551


state 522

 242) packname : nameo "." sym _

  $default      reduce using rule 242 (packname)


state 523

 234) interfacedcl_list : interfacedcl_list term interfacedcl _

  $default      reduce using rule 234 (interfacedcl_list)


state 524

 247) indcl : "(" oarg_type_list _ ")" fnres

  ")"           shift, and go to state 552


state 525

 246) interfacedcl : "(" packname ")" _

  $default      reduce using rule 246 (interfacedcl)


state 526

 203) fndcl : fname "(" oarg_type_list ")" _ fnres

  "->"          shift, and go to state 199
  $default      reduce using rule 214 (fnres)

  fnres         go to state 553

state 527

 149) specialfn : "[" "]" _
 150) specialfn : "[" "]" _ "="

  "="           shift, and go to state 554
  $default      reduce using rule 149 (specialfn)


state 528

 206) fnlitdcl : DO "(" oarg_type_list ")" fnres _

  $default      reduce using rule 206 (fnlitdcl)


state 529

 253) arg_type_list : arg_type_list comma arg_type _

  $default      reduce using rule 253 (arg_type_list)


state 530

 216) fnres : "->" "(" oarg_type_list ")" _

  $default      reduce using rule 216 (fnres)


state 531

 304) stmt_list : stmt_list term stmt _

  $default      reduce using rule 304 (stmt_list)


state 532

 210) fntype : FUNC "(" oarg_type_list ")" fnres _

  $default      reduce using rule 210 (fntype)


state 533

 279) go_call : "(" ")" fnlitdcl _

  $default      reduce using rule 279 (go_call)


state 534

 280) go_call : "(" expr_or_type_list ")" _ fnliteral

  DO            shift, and go to state 66

  fnlitdcl      go to state 67
  fnliteral     go to state 555

state 535

 281) go_call : "(" expr_or_type_list "..." _ ")" fnliteral

  ")"           shift, and go to state 556


state 536

  27) oo_dcl : CLASS dotname dotname INDENT xdcl_list OUTDENT _

  $default      reduce using rule 27 (oo_dcl)


state 537

  52) for_header : osimple_stmt semi osimple_stmt semi osimple_stmt _

  $default      reduce using rule 52 (for_header)


state 538

 302) small_stmt_list : small_stmt_list ";" small_stmt _

  $default      reduce using rule 302 (small_stmt_list)


state 539

  60) elseif : ELSE IF _ if_header suite_stmt

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9

  simple_stmt   go to state 120
  if_header     go to state 557
  uexpr         go to state 26
  expr          go to state 27
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67
  expr_list     go to state 90

state 540

  64) else : ELSE suite_stmt _

  $default      reduce using rule 64 (else)


state 541

  40) case : CASE expr_or_type_list "=" expr _
  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 40 (case)


state 542

  41) case : CASE expr_or_type_list ":=" expr _
  70) expr : expr _ "||" expr
  71) expr : expr _ "&&" expr
  72) expr : expr _ "==" expr
  73) expr : expr _ "!=" expr
  74) expr : expr _ "<" expr
  75) expr : expr _ "<=" expr
  76) expr : expr _ ">=" expr
  77) expr : expr _ ">" expr
  78) expr : expr _ "+" expr
  79) expr : expr _ "-" expr
  80) expr : expr _ "|" expr
  81) expr : expr _ "^" expr
  82) expr : expr _ "*" expr
  83) expr : expr _ "/" expr
  84) expr : expr _ "%" expr
  85) expr : expr _ "&" expr
  86) expr : expr _ "&^" expr
  87) expr : expr _ "<<" expr
  88) expr : expr _ ">>" expr
  89) expr : expr _ "<-" expr

  "*"           shift, and go to state 137
  "/"           shift, and go to state 138
  "%"           shift, and go to state 139
  "&"           shift, and go to state 140
  "<<"          shift, and go to state 142
  ">>"          shift, and go to state 143
  "&^"          shift, and go to state 141
  "+"           shift, and go to state 133
  "-"           shift, and go to state 134
  "|"           shift, and go to state 135
  "^"           shift, and go to state 136
  "=="          shift, and go to state 127
  "!="          shift, and go to state 128
  "<="          shift, and go to state 130
  ">="          shift, and go to state 131
  "<"           shift, and go to state 129
  ">"           shift, and go to state 132
  "&&"          shift, and go to state 126
  "||"          shift, and go to state 125
  "<-"          shift, and go to state 144
  $default      reduce using rule 41 (case)


state 543

 107) simple_call : nameo "(" expr_or_type_list ")" _

  $default      reduce using rule 107 (simple_call)


state 544

 108) simple_call : nameo "(" expr_or_type_list "..." _ ")"

  ")"           shift, and go to state 558


state 545

 117) pexpr_no_paren : pexpr "[" oexpr ":" oexpr "]" _

  $default      reduce using rule 117 (pexpr_no_paren)


state 546

 118) pexpr_no_paren : pexpr "[" oexpr ":" oexpr ":" _ oexpr "]"

  CHAN          shift, and go to state 59
  DO            shift, and go to state 66
  FUNC          shift, and go to state 68
  INTERFACE     shift, and go to state 64
  MAP           shift, and go to state 60
  NAME          shift, and go to state 8
  STRUCT        shift, and go to state 63
  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  "("           shift, and go to state 46
  "*"           shift, and go to state 29
  "&"           shift, and go to state 30
  "+"           shift, and go to state 31
  "-"           shift, and go to state 32
  "^"           shift, and go to state 35
  "<-"          shift, and go to state 36
  "!"           shift, and go to state 33
  "~"           shift, and go to state 34
  "["           shift, and go to state 58
  "@"           shift, and go to state 9
  $default      reduce using rule 315 (oexpr)

  uexpr         go to state 26
  expr          go to state 177
  pexpr         go to state 28
  call          go to state 37
  call_do       go to state 38
  call_self     go to state 39
  literal       go to state 40
  name          go to state 41
  oexpr         go to state 559
  pseudocall    go to state 42
  convtype      go to state 43
  comptype      go to state 44
  pexpr_no_paren  go to state 45
  fnliteral     go to state 47
  string        go to state 52
  number        go to state 53
  regex         go to state 54
  sym           go to state 55
  fntype        go to state 56
  othertype     go to state 57
  structtype    go to state 61
  interfacetype  go to state 62
  fnlitdcl      go to state 67

state 547

 130) braced_keyval : "{" INDENT braced_keyval_list OUTDENT "}" _

  $default      reduce using rule 130 (braced_keyval)


state 548

 167) ntype : "(" ntype ")" _
 176) non_recvchantype : "(" ntype ")" _

  "("           reduce using rule 176 (non_recvchantype)
  "{"           reduce using rule 176 (non_recvchantype)
  $default      reduce using rule 167 (ntype)


state 549

 237) structdcl : "(" embed ")" oliteral _

  $default      reduce using rule 237 (structdcl)


state 550

 239) structdcl : "(" "*" embed ")" _ oliteral

  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  $default      reduce using rule 321 (oliteral)

  string        go to state 52
  number        go to state 53
  regex         go to state 54
  oliteral      go to state 560
  literal       go to state 443

state 551

 240) structdcl : "*" "(" embed ")" _ oliteral

  STRING        shift, and go to state 50
  NUMBER        shift, and go to state 51
  REGEX         shift, and go to state 49
  $default      reduce using rule 321 (oliteral)

  string        go to state 52
  number        go to state 53
  regex         go to state 54
  oliteral      go to state 561
  literal       go to state 443

state 552

 247) indcl : "(" oarg_type_list ")" _ fnres

  "->"          shift, and go to state 199
  $default      reduce using rule 214 (fnres)

  fnres         go to state 562

state 553

 203) fndcl : fname "(" oarg_type_list ")" fnres _

  $default      reduce using rule 203 (fndcl)


state 554

 150) specialfn : "[" "]" "=" _

  $default      reduce using rule 150 (specialfn)


state 555

 280) go_call : "(" expr_or_type_list ")" fnliteral _

  $default      reduce using rule 280 (go_call)


state 556

 281) go_call : "(" expr_or_type_list "..." ")" _ fnliteral

  DO            shift, and go to state 66

  fnlitdcl      go to state 67
  fnliteral     go to state 563

state 557

  60) elseif : ELSE IF if_header _ suite_stmt

  INDENT        shift, and go to state 259
  ":"           shift, and go to state 258

  suite_stmt    go to state 564

state 558

 108) simple_call : nameo "(" expr_or_type_list "..." ")" _

  $default      reduce using rule 108 (simple_call)


state 559

 118) pexpr_no_paren : pexpr "[" oexpr ":" oexpr ":" oexpr _ "]"

  "]"           shift, and go to state 565


state 560

 239) structdcl : "(" "*" embed ")" oliteral _

  $default      reduce using rule 239 (structdcl)


state 561

 240) structdcl : "*" "(" embed ")" oliteral _

  $default      reduce using rule 240 (structdcl)


state 562

 247) indcl : "(" oarg_type_list ")" fnres _

  $default      reduce using rule 247 (indcl)


state 563

 281) go_call : "(" expr_or_type_list "..." ")" fnliteral _

  $default      reduce using rule 281 (go_call)


state 564

  60) elseif : ELSE IF if_header suite_stmt _

  $default      reduce using rule 60 (elseif)


state 565

 118) pexpr_no_paren : pexpr "[" oexpr ":" oexpr ":" oexpr "]" _

  $default      reduce using rule 118 (pexpr_no_paren)

